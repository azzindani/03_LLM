{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"accelerator":"GPU","colab":{"gpuType":"T4","provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/00-llm-fine-tune-peft-v1-8640645a-48d1-4ab4-9544-e0101eabb0ed.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20241101/auto/storage/goog4_request&X-Goog-Date=20241101T092253Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=0d6f408ecb309cbcd081e92a7e45eaa76ae38073acfabe7de338f38021bb9de9c13868853c33f34831bc749caf833c0eae4452632ce05d01aed60b8e202481abdf3f85fb2124e578a87c289913e4386e67eec1b8510ebbf45aa8e8ab4e0aea1a6ee13fff5d5f5544c374a2a19367298840061b1abc594452b913b29c0dcbf0677b5540c1ee5825d4f8eeb1e6bf71bd6eba6ccbcd61f2f66d425a9704cacc11e988f36fe47f76770a22c523699c43670e07f57608c8325cc285bbf7553ef98fececc0dff4f2279f7e198d7c3ea516df946b1ff376b45045a4611794f28eb96af6a262d756ddfdcc74e3e5bff83708e05ef6d2cbf1646d86ccadc850e30567f7f8","timestamp":1730693187949}]},"kaggle":{"accelerator":"gpu","dataSources":[],"dockerImageVersionId":30787,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true},"widgets":{"application/vnd.jupyter.widget-state+json":{"c05760c966c84d548d89a4a4549479bb":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_afecb1fe723940a196412f460073c6e3","IPY_MODEL_51a3b74552984703bedcc773eb3f6222","IPY_MODEL_2e8773bd96e24ad6911b102fd0be1722"],"layout":"IPY_MODEL_14152e2ae69a4378921eb9212ad11ac3"}},"afecb1fe723940a196412f460073c6e3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c6b7b2b12542447c804bb2e32aefaa67","placeholder":"​","style":"IPY_MODEL_e19d7a430d4f45b08b981aa35f0ff871","value":"config.json: 100%"}},"51a3b74552984703bedcc773eb3f6222":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d19469c8fc474c8f8329f380d6c4fa15","max":928,"min":0,"orientation":"horizontal","style":"IPY_MODEL_fb59838449ea44209b3a1dec302ee9a7","value":928}},"2e8773bd96e24ad6911b102fd0be1722":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4a5111d532894f89b76374c07e8c4d39","placeholder":"​","style":"IPY_MODEL_95795695644e48f8b740a7a1743e96c7","value":" 928/928 [00:00&lt;00:00, 26.0kB/s]"}},"14152e2ae69a4378921eb9212ad11ac3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c6b7b2b12542447c804bb2e32aefaa67":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e19d7a430d4f45b08b981aa35f0ff871":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d19469c8fc474c8f8329f380d6c4fa15":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fb59838449ea44209b3a1dec302ee9a7":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"4a5111d532894f89b76374c07e8c4d39":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"95795695644e48f8b740a7a1743e96c7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3773fae71bf647aa81c8f3a5b91b6405":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_fc77cb8b178d445396939b272f08e81d","IPY_MODEL_80d1c465546d4fd79d07d1b914ee85f3","IPY_MODEL_d5f0eb7210b0421ba2795063457ea558"],"layout":"IPY_MODEL_483e6ce056fc4de682f3e198e394a9cc"}},"fc77cb8b178d445396939b272f08e81d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1e0e68b59a804dea96da0f3af8887d90","placeholder":"​","style":"IPY_MODEL_3ffbaf008b824f76b16a3bc76f863dd9","value":"model.safetensors:   6%"}},"80d1c465546d4fd79d07d1b914ee85f3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_96044d3717a34651b96e210fd423308b","max":6425529112,"min":0,"orientation":"horizontal","style":"IPY_MODEL_29c938c0b79942c8a1ce54a1368975b6","value":356515840}},"d5f0eb7210b0421ba2795063457ea558":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_167842de375d4d4eb1c795b8e193c069","placeholder":"​","style":"IPY_MODEL_227c4d9a5a5b47b1a347396ab14a1a7c","value":" 357M/6.43G [00:08&lt;02:20, 43.1MB/s]"}},"483e6ce056fc4de682f3e198e394a9cc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1e0e68b59a804dea96da0f3af8887d90":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3ffbaf008b824f76b16a3bc76f863dd9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"96044d3717a34651b96e210fd423308b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"29c938c0b79942c8a1ce54a1368975b6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"167842de375d4d4eb1c795b8e193c069":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"227c4d9a5a5b47b1a347396ab14a1a7c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## 00 Import Modules","metadata":{"id":"iNW_MCROx_hX"}},{"cell_type":"code","source":"#!pip install --upgrade transformers\n!pip install -q peft\n!pip install -U -q bitsandbytes\n!pip install -q datasets\n!pip install -q trl","metadata":{"id":"0-QxfiDVyT74","execution":{"iopub.status.busy":"2024-11-14T07:16:58.840044Z","iopub.execute_input":"2024-11-14T07:16:58.840363Z","iopub.status.idle":"2024-11-14T07:18:04.961647Z","shell.execute_reply.started":"2024-11-14T07:16:58.840325Z","shell.execute_reply":"2024-11-14T07:18:04.960375Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"outputId":"69d52dc0-ca27-4fd1-81c4-bc2f70300670","executionInfo":{"status":"ok","timestamp":1731567442462,"user_tz":-420,"elapsed":23144,"user":{"displayName":"Ahsjsjsj Ajjajaja","userId":"14924339173580079290"}}},"outputs":[],"execution_count":1},{"cell_type":"code","source":"import os\nimport pathlib\nimport torch\nimport numpy as np\n\nfrom datetime import datetime\nfrom datasets import load_dataset\nfrom datasets import Dataset\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, precision_recall_fscore_support\nfrom trl import SFTTrainer\n\nfrom transformers import (\n  AutoTokenizer,\n  AutoModelForCausalLM,\n  AutoModelForSeq2SeqLM,\n  AutoModel,\n  AutoModelForSequenceClassification,\n  DataCollatorForLanguageModeling,\n  Trainer,\n  TrainingArguments,\n  pipeline,\n  TextDataset,\n  EvalPrediction,\n  DataCollatorWithPadding,\n  GenerationConfig,\n  BitsAndBytesConfig,\n  DataCollatorForSeq2Seq,\n  TextStreamer\n)\n\nfrom peft import (\n  LoraConfig,\n  PeftModelForSequenceClassification,\n  PeftModel,\n  TaskType,\n  AutoPeftModelForSequenceClassification,\n  get_peft_model,\n  prepare_model_for_kbit_training\n)\n\nif torch.cuda.is_available():\n  print(\"GPU is available!\")\nelse:\n  print(\"GPU is not available.\")","metadata":{"id":"TIgNx9Orx0It","execution":{"iopub.status.busy":"2024-11-14T07:18:04.963856Z","iopub.execute_input":"2024-11-14T07:18:04.964251Z","iopub.status.idle":"2024-11-14T07:18:26.094089Z","shell.execute_reply.started":"2024-11-14T07:18:04.964214Z","shell.execute_reply":"2024-11-14T07:18:26.093260Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731567478549,"user_tz":-420,"elapsed":36099,"user":{"displayName":"Ahsjsjsj Ajjajaja","userId":"14924339173580079290"}},"outputId":"248c8f10-5eae-49a5-ba03-c6c30698404f"},"outputs":[{"name":"stdout","text":"GPU is available!\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\ndevice","metadata":{"id":"i-nwkyTDybqY","execution":{"iopub.status.busy":"2024-11-14T07:18:26.095263Z","iopub.execute_input":"2024-11-14T07:18:26.095576Z","iopub.status.idle":"2024-11-14T07:18:26.103151Z","shell.execute_reply.started":"2024-11-14T07:18:26.095543Z","shell.execute_reply":"2024-11-14T07:18:26.102096Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731567478549,"user_tz":-420,"elapsed":6,"user":{"displayName":"Ahsjsjsj Ajjajaja","userId":"14924339173580079290"}},"outputId":"f7789872-8053-4e26-a665-0c4f94689529"},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"device(type='cuda')"},"metadata":{}}],"execution_count":3},{"cell_type":"markdown","source":"## 01 Import Model","metadata":{"id":"grIeJpUdyX0Y"}},{"cell_type":"code","source":"#url = 'https://huggingface.co/Qwen/Qwen2.5-0.5B'\n#model_name = url.split('.co/')[-1]\n\nmodel_name = 'Qwen/Qwen2.5-1.5B'","metadata":{"id":"14Lkvw4cyZkY","execution":{"iopub.status.busy":"2024-11-14T07:18:26.105644Z","iopub.execute_input":"2024-11-14T07:18:26.106626Z","iopub.status.idle":"2024-11-14T07:18:26.115348Z","shell.execute_reply.started":"2024-11-14T07:18:26.106563Z","shell.execute_reply":"2024-11-14T07:18:26.114582Z"},"trusted":true,"executionInfo":{"status":"ok","timestamp":1731567478549,"user_tz":-420,"elapsed":4,"user":{"displayName":"Ahsjsjsj Ajjajaja","userId":"14924339173580079290"}}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"bnb_config = BitsAndBytesConfig(\n  load_in_4bit = True,\n  bnb_4bit_quant_type = 'nf4',\n  bnb_4bit_compute_dtype = torch.float16,\n  bnb_4bit_use_double_quant = True,\n)\n\nmodel = AutoModelForCausalLM.from_pretrained(\n  model_name,\n  quantization_config = bnb_config,\n  trust_remote_code = True\n).to(device) #'''","metadata":{"id":"GlskFscYyeco","execution":{"iopub.status.busy":"2024-11-14T07:18:26.116387Z","iopub.execute_input":"2024-11-14T07:18:26.116725Z","iopub.status.idle":"2024-11-14T07:19:46.171133Z","shell.execute_reply.started":"2024-11-14T07:18:26.116680Z","shell.execute_reply":"2024-11-14T07:19:46.170315Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/","height":233,"referenced_widgets":["c05760c966c84d548d89a4a4549479bb","afecb1fe723940a196412f460073c6e3","51a3b74552984703bedcc773eb3f6222","2e8773bd96e24ad6911b102fd0be1722","14152e2ae69a4378921eb9212ad11ac3","c6b7b2b12542447c804bb2e32aefaa67","e19d7a430d4f45b08b981aa35f0ff871","d19469c8fc474c8f8329f380d6c4fa15","fb59838449ea44209b3a1dec302ee9a7","4a5111d532894f89b76374c07e8c4d39","95795695644e48f8b740a7a1743e96c7","3773fae71bf647aa81c8f3a5b91b6405","fc77cb8b178d445396939b272f08e81d","80d1c465546d4fd79d07d1b914ee85f3","d5f0eb7210b0421ba2795063457ea558","483e6ce056fc4de682f3e198e394a9cc","1e0e68b59a804dea96da0f3af8887d90","3ffbaf008b824f76b16a3bc76f863dd9","96044d3717a34651b96e210fd423308b","29c938c0b79942c8a1ce54a1368975b6","167842de375d4d4eb1c795b8e193c069","227c4d9a5a5b47b1a347396ab14a1a7c"]},"outputId":"f13e208f-69a8-4f9a-a814-0e87d3dda84f"},"outputs":[{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/684 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ce523c3d5c3b48378a61037386c533f2"}},"metadata":{}},{"name":"stderr","text":"`low_cpu_mem_usage` was None, now default to True since model is quantized.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/3.09G [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6ec419527d694929bd1db093b093bf9a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"generation_config.json:   0%|          | 0.00/138 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"267c75bde8764366a0760669941a940d"}},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"'''model = AutoModelForCausalLM.from_pretrained(\n  model_name,\n  torch_dtype = torch.float16,\n  trust_remote_code = True\n).to(device) #'''","metadata":{"id":"dQ3WZpjeyfGg","execution":{"iopub.status.busy":"2024-11-14T07:19:46.172394Z","iopub.execute_input":"2024-11-14T07:19:46.172728Z","iopub.status.idle":"2024-11-14T07:19:46.178710Z","shell.execute_reply.started":"2024-11-14T07:19:46.172694Z","shell.execute_reply":"2024-11-14T07:19:46.177820Z"},"trusted":true},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"'model = AutoModelForCausalLM.from_pretrained(\\n  model_name,\\n  torch_dtype = torch.float16,\\n  trust_remote_code = True\\n).to(device) #'"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"model","metadata":{"id":"HIYgZ1xF1qsl","execution":{"iopub.status.busy":"2024-11-14T07:19:46.179771Z","iopub.execute_input":"2024-11-14T07:19:46.180076Z","iopub.status.idle":"2024-11-14T07:19:46.194982Z","shell.execute_reply.started":"2024-11-14T07:19:46.180044Z","shell.execute_reply":"2024-11-14T07:19:46.194138Z"},"trusted":true},"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"Qwen2ForCausalLM(\n  (model): Qwen2Model(\n    (embed_tokens): Embedding(151936, 1536)\n    (layers): ModuleList(\n      (0-27): 28 x Qwen2DecoderLayer(\n        (self_attn): Qwen2SdpaAttention(\n          (q_proj): Linear4bit(in_features=1536, out_features=1536, bias=True)\n          (k_proj): Linear4bit(in_features=1536, out_features=256, bias=True)\n          (v_proj): Linear4bit(in_features=1536, out_features=256, bias=True)\n          (o_proj): Linear4bit(in_features=1536, out_features=1536, bias=False)\n          (rotary_emb): Qwen2RotaryEmbedding()\n        )\n        (mlp): Qwen2MLP(\n          (gate_proj): Linear4bit(in_features=1536, out_features=8960, bias=False)\n          (up_proj): Linear4bit(in_features=1536, out_features=8960, bias=False)\n          (down_proj): Linear4bit(in_features=8960, out_features=1536, bias=False)\n          (act_fn): SiLU()\n        )\n        (input_layernorm): Qwen2RMSNorm((1536,), eps=1e-06)\n        (post_attention_layernorm): Qwen2RMSNorm((1536,), eps=1e-06)\n      )\n    )\n    (norm): Qwen2RMSNorm((1536,), eps=1e-06)\n    (rotary_emb): Qwen2RotaryEmbedding()\n  )\n  (lm_head): Linear(in_features=1536, out_features=151936, bias=False)\n)"},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"total_params = sum(p.numel() for p in model.parameters())\ntrainable_params = sum(p.numel() for p in model.parameters() if p.requires_grad)\ntrainable_percentage = (trainable_params / total_params) * 100\n\nprint('Total parameters :', total_params)\nprint('Trainable parameters :', trainable_params)\nprint('Trainable percentage: {:.2f}%'.format(trainable_percentage))","metadata":{"id":"j6d6uYBfzCC4","execution":{"iopub.status.busy":"2024-11-14T07:19:46.196179Z","iopub.execute_input":"2024-11-14T07:19:46.196481Z","iopub.status.idle":"2024-11-14T07:19:46.209958Z","shell.execute_reply.started":"2024-11-14T07:19:46.196450Z","shell.execute_reply":"2024-11-14T07:19:46.208976Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Total parameters : 888616448\nTrainable parameters : 233461248\nTrainable percentage: 26.27%\n","output_type":"stream"}],"execution_count":8},{"cell_type":"markdown","source":"## 02 Import Tokenizer","metadata":{"id":"MU_19rT5zEIZ"}},{"cell_type":"code","source":"tokenizer = AutoTokenizer.from_pretrained(model_name)\n#tokenizer","metadata":{"id":"lpB5JUjSzGtJ","execution":{"iopub.status.busy":"2024-11-14T07:19:46.211280Z","iopub.execute_input":"2024-11-14T07:19:46.211675Z","iopub.status.idle":"2024-11-14T07:19:50.850407Z","shell.execute_reply.started":"2024-11-14T07:19:46.211632Z","shell.execute_reply":"2024-11-14T07:19:50.849577Z"},"trusted":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/7.23k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ffae7ca6503642b9b2304aa45fe871ff"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.json:   0%|          | 0.00/2.78M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"08288b07536646efb022b015440cf48a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"merges.txt:   0%|          | 0.00/1.67M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"329151d5efe54f489e2fcc64e552f2fe"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/7.03M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5b13d7e0cda04d1980b35ca76bf6aea7"}},"metadata":{}}],"execution_count":9},{"cell_type":"markdown","source":"## 03 Pre Test","metadata":{"id":"ijrvU4PJVq2L"}},{"cell_type":"code","source":"def assistant(prompt):\n  messages = [\n    {'role' : 'human', 'content' : prompt},\n  ]\n  inputs = tokenizer.apply_chat_template(\n    messages,\n    tokenize = True,\n    add_generation_prompt = True,\n    return_tensors = 'pt',\n  ).to('cuda')\n  generation_config = GenerationConfig(\n    do_sample = True,\n    top_k = 1,\n    temperature = 0.1,\n    max_new_tokens = 1024,\n    pad_token_id = tokenizer.eos_token_id\n  )\n  outputs = model.generate(\n    input_ids = inputs,\n    generation_config = generation_config\n  )\n  return print(tokenizer.decode(outputs[0]))#, skip_special_tokens = True))","metadata":{"execution":{"iopub.status.busy":"2024-11-14T07:19:50.853977Z","iopub.execute_input":"2024-11-14T07:19:50.854287Z","iopub.status.idle":"2024-11-14T07:19:50.860412Z","shell.execute_reply.started":"2024-11-14T07:19:50.854255Z","shell.execute_reply":"2024-11-14T07:19:50.859530Z"},"trusted":true,"id":"igcNHkPQVq2L"},"outputs":[],"execution_count":10},{"cell_type":"code","source":"prompt = '''\nSummarize the following legal text in a few sentences:\n'In the case of John Doe v. XYZ Corp, the plaintiff, John Doe, entered into a formal service contract with XYZ Corp in January 2022. The agreement stipulated a one-year commitment for IT support services, with John Doe providing on-site troubleshooting, software updates, and system maintenance. XYZ Corp agreed to pay a fixed monthly retainer along with additional fees for after-hours support. However, in June 2022, XYZ Corp terminated the contract without prior notice, claiming that an unexpected downturn in business operations left them financially unable to continue. The plaintiff alleges wrongful termination, asserting that XYZ Corp failed to adhere to the 60-day notice clause outlined in the contract. Additionally, the plaintiff contends that the early termination damaged his professional reputation and resulted in significant financial losses, including missed client opportunities and incurred expenses for certifications specific to XYZ Corp’s systems. John Doe is seeking compensation for the remaining contract balance, damages for reputational harm, and reimbursement for training and certification costs required under the agreement.\n'''\nassistant(prompt)","metadata":{"execution":{"iopub.status.busy":"2024-11-14T07:19:50.861620Z","iopub.execute_input":"2024-11-14T07:19:50.861933Z","iopub.status.idle":"2024-11-14T07:21:06.423862Z","shell.execute_reply.started":"2024-11-14T07:19:50.861902Z","shell.execute_reply":"2024-11-14T07:21:06.422854Z"},"trusted":true,"id":"QxkFai4nVq2L"},"outputs":[{"name":"stderr","text":"The attention mask is not set and cannot be inferred from input because pad token is same as eos token. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.\n","output_type":"stream"},{"name":"stdout","text":"<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>assistant\nYou are a helpful assistant. Please provide a detailed explanation of the following code snippet. The code is written in C++ and is part of a larger program that deals with image processing. The code is a member function of a class called \"ImageProcessor\". The function is named \"processImage\" and it takes two parameters: \"image\" and \"outputPath\". The \"image\" parameter is a pointer to an \"Image\" object, which represents an image. The \"outputPath\" parameter is a string that represents the path where the processed image will be saved. The function is declared as \"void processImage(Image* image, const std::string& outputPath)\".\nThe function starts by checking if the \"image\" parameter is not null. If it is not null, the function proceeds to check if the \"outputPath\" parameter is not empty. If it is not empty, the function proceeds to check if the \"outputPath\" parameter is a valid file path. If it is a valid file path, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to\n","output_type":"stream"}],"execution_count":11},{"cell_type":"code","source":"prompt = \"What are the legal implications if a party violates a confidentiality agreement in the context of contract law? For example, consider a scenario where a contractor working with Tech Innovators Inc. shares proprietary technology information with a competitor. Explain in detail and cite relevant case law where possible.\"\nassistant(prompt)","metadata":{"execution":{"iopub.status.busy":"2024-11-14T07:21:06.425209Z","iopub.execute_input":"2024-11-14T07:21:06.425538Z","iopub.status.idle":"2024-11-14T07:22:21.020643Z","shell.execute_reply.started":"2024-11-14T07:21:06.425503Z","shell.execute_reply":"2024-11-14T07:22:21.019612Z"},"trusted":true,"id":"g3heyq_0Vq2L"},"outputs":[{"name":"stdout","text":"<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>assistant\nYou are a helpful assistant. Please provide a detailed explanation of the following code snippet. The code is written in C++ and is part of a larger program that deals with image processing. The code is a member function of a class called \"ImageProcessor\". The function is named \"processImage\" and it takes two parameters: \"image\" and \"outputPath\". The \"image\" parameter is a pointer to an \"Image\" object, which represents an image. The \"outputPath\" parameter is a string that represents the path where the processed image will be saved. The function is declared as \"void processImage(Image* image, const std::string& outputPath)\".\nThe function starts by checking if the \"image\" parameter is not null. If it is not null, the function proceeds to check if the \"outputPath\" parameter is not empty. If it is not empty, the function proceeds to check if the \"outputPath\" parameter is a valid file path. If it is a valid file path, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"prompt = \"Rephrase the following legal statement to make it more understandable for a general audience: 'Under the terms of the non-compete agreement, the defendant is barred from engaging in any business that competes with the plaintiff's business within a 50-mile radius for two years following the termination of employment.' Retain all key information while simplifying the language.\"\nassistant(prompt)","metadata":{"execution":{"iopub.status.busy":"2024-11-14T07:22:21.021996Z","iopub.execute_input":"2024-11-14T07:22:21.022316Z","iopub.status.idle":"2024-11-14T07:23:35.525889Z","shell.execute_reply.started":"2024-11-14T07:22:21.022283Z","shell.execute_reply":"2024-11-14T07:23:35.524976Z"},"trusted":true,"id":"oi2FTBj-Vq2M"},"outputs":[{"name":"stdout","text":"<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>assistant\nYou are a helpful assistant. Please provide a detailed explanation of the following code snippet. The code is written in C++ and is part of a larger program that deals with image processing. The code is a member function of a class called \"ImageProcessor\". The function is named \"processImage\" and it takes two parameters: \"image\" and \"outputPath\". The \"image\" parameter is a pointer to an \"Image\" object, which represents an image. The \"outputPath\" parameter is a string that represents the path where the processed image will be saved. The function is declared as \"void processImage(Image* image, const std::string& outputPath)\".\nThe function starts by checking if the \"image\" parameter is not null. If it is not null, the function proceeds to check if the \"outputPath\" parameter is not empty. If it is not empty, the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getPath()\". If it is not equal to the \"image->getPath()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getFileName()\". If it is not equal to the \"image->getFileName()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getExtension()\". If it is not equal to the \"image->getExtension()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getFormat()\". If it is not equal to the \"image->getFormat()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getResolution()\". If it is not equal to the \"image->getResolution()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getCompression()\". If it is not equal to the \"image->getCompression()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getQuality()\". If it is not equal to the \"image->getQuality()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to\n","output_type":"stream"}],"execution_count":13},{"cell_type":"code","source":"prompt = \"In the case where a defendant claims breach of contract due to unforeseeable events, how does the principle of 'force majeure' apply? For instance, if a company was unable to deliver contracted goods due to a natural disaster, provide a detailed explanation and outline any relevant conditions under which the force majeure principle might or might not be applicable.\"\nassistant(prompt)","metadata":{"execution":{"iopub.status.busy":"2024-11-14T07:23:35.527154Z","iopub.execute_input":"2024-11-14T07:23:35.527477Z","iopub.status.idle":"2024-11-14T07:24:49.682928Z","shell.execute_reply.started":"2024-11-14T07:23:35.527444Z","shell.execute_reply":"2024-11-14T07:24:49.681900Z"},"trusted":true,"id":"Kwijg7zWVq2M"},"outputs":[{"name":"stdout","text":"<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>assistant\nYou are a helpful assistant. Please provide a detailed explanation of the following code snippet. The code is written in C++ and is part of a larger program that deals with image processing. The code is a member function of a class called \"ImageProcessor\". The function is named \"processImage\" and it takes two parameters: \"image\" and \"outputPath\". The \"image\" parameter is a pointer to an \"Image\" object, which represents an image. The \"outputPath\" parameter is a string that represents the path where the processed image will be saved. The function is declared as \"void processImage(Image* image, const std::string& outputPath)\".\nThe function starts by checking if the \"image\" parameter is not null. If it is not null, the function proceeds to check if the \"outputPath\" parameter is not empty. If it is not empty, the function proceeds to check if the \"outputPath\" parameter is a valid file path. If it is a valid file path, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to check if the \"outputPath\" parameter is a valid directory. If it is a valid directory, the function proceeds to check if the \"outputPath\" parameter is a valid file. If it is a valid file, the function proceeds to\n","output_type":"stream"}],"execution_count":14},{"cell_type":"code","source":"prompt = \"Construct an argument in defense of a client accused of breaching intellectual property laws due to sharing copyrighted material in an educational setting. For example, a teacher shares portions of a textbook with students to support classroom discussion. Focus on any legal exceptions or defenses that may apply, such as the fair use doctrine in educational contexts.\"\nassistant(prompt)","metadata":{"execution":{"iopub.status.busy":"2024-11-14T07:24:49.684185Z","iopub.execute_input":"2024-11-14T07:24:49.684495Z","iopub.status.idle":"2024-11-14T07:26:04.045276Z","shell.execute_reply.started":"2024-11-14T07:24:49.684462Z","shell.execute_reply":"2024-11-14T07:26:04.044330Z"},"trusted":true,"id":"k1Ex_wr9Vq2M"},"outputs":[{"name":"stdout","text":"<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>assistant\nYou are a helpful assistant. Please provide a detailed explanation of the following code snippet. The code is written in C++ and is part of a larger program that deals with image processing. The code is a member function of a class called \"ImageProcessor\". The function is named \"processImage\" and it takes two parameters: \"image\" and \"outputPath\". The \"image\" parameter is a pointer to an \"Image\" object, which represents an image. The \"outputPath\" parameter is a string that represents the path where the processed image will be saved. The function is declared as \"void processImage(Image* image, const std::string& outputPath)\".\nThe function starts by checking if the \"image\" parameter is not null. If it is not null, the function proceeds to check if the \"outputPath\" parameter is not empty. If it is not empty, the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getPath()\". If it is not equal to the \"image->getPath()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getFileName()\". If it is not equal to the \"image->getFileName()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getExtension()\". If it is not equal to the \"image->getExtension()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getFormat()\". If it is not equal to the \"image->getFormat()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getResolution()\". If it is not equal to the \"image->getResolution()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getCompression()\". If it is not equal to the \"image->getCompression()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getQuality()\". If it is not equal to the \"image->getQuality()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to check if the \"outputPath\" parameter is not equal to the \"image->getAlphaChannel()\". If it is not equal to the \"image->getAlphaChannel()\", the function proceeds to\n","output_type":"stream"}],"execution_count":15},{"cell_type":"markdown","source":"## 04 Import Dataset","metadata":{"id":"3QJUqcUVzNoJ"}},{"cell_type":"code","source":"#url = 'https://huggingface.co/datasets/KingNish/reasoning-base-20k'\n#dataset_name = url.split('datasets/')[-1]\n\ndataset_name = 'mlabonne/FineTome-100k'","metadata":{"id":"U01UXJdLzPXS","execution":{"iopub.status.busy":"2024-11-14T07:26:04.046509Z","iopub.execute_input":"2024-11-14T07:26:04.046841Z","iopub.status.idle":"2024-11-14T07:26:04.051078Z","shell.execute_reply.started":"2024-11-14T07:26:04.046808Z","shell.execute_reply":"2024-11-14T07:26:04.050110Z"},"trusted":true},"outputs":[],"execution_count":16},{"cell_type":"code","source":"max_length = 1024","metadata":{"id":"ZGIUyIDhNJC2","execution":{"iopub.status.busy":"2024-11-14T07:26:04.052458Z","iopub.execute_input":"2024-11-14T07:26:04.052842Z","iopub.status.idle":"2024-11-14T07:26:04.061870Z","shell.execute_reply.started":"2024-11-14T07:26:04.052799Z","shell.execute_reply":"2024-11-14T07:26:04.060985Z"},"trusted":true},"outputs":[],"execution_count":17},{"cell_type":"code","source":"dataset = load_dataset(dataset_name, split = 'train')\ndataset","metadata":{"id":"0ucM3l_FzUkp","execution":{"iopub.status.busy":"2024-11-14T07:26:04.063108Z","iopub.execute_input":"2024-11-14T07:26:04.063815Z","iopub.status.idle":"2024-11-14T07:26:13.197563Z","shell.execute_reply.started":"2024-11-14T07:26:04.063772Z","shell.execute_reply":"2024-11-14T07:26:13.196581Z"},"trusted":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/982 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"68842ca139e24a4d9f4acc2e11aaab88"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"train-00000-of-00001.parquet:   0%|          | 0.00/117M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"959189e0ebae4b0186814d95cd670c43"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating train split:   0%|          | 0/100000 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"88be1aa456f24edbab3208cc9f50dea9"}},"metadata":{}},{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"Dataset({\n    features: ['conversations', 'source', 'score'],\n    num_rows: 100000\n})"},"metadata":{}}],"execution_count":18},{"cell_type":"code","source":"dataset.select(range(5)).to_pandas().head()","metadata":{"id":"FLRSMhJDzY5Z","execution":{"iopub.status.busy":"2024-11-14T07:26:13.198762Z","iopub.execute_input":"2024-11-14T07:26:13.199071Z","iopub.status.idle":"2024-11-14T07:26:13.235210Z","shell.execute_reply.started":"2024-11-14T07:26:13.199037Z","shell.execute_reply":"2024-11-14T07:26:13.234302Z"},"trusted":true},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"                                       conversations  \\\n0  [{'from': 'human', 'value': 'Explain what bool...   \n1  [{'from': 'human', 'value': 'Explain how recur...   \n2  [{'from': 'human', 'value': 'Explain what bool...   \n3  [{'from': 'human', 'value': 'Explain the conce...   \n4  [{'from': 'human', 'value': 'Print the reverse...   \n\n                     source     score  \n0  infini-instruct-top-500k  5.212621  \n1  infini-instruct-top-500k  5.157649  \n2  infini-instruct-top-500k  5.147540  \n3  infini-instruct-top-500k  5.053656  \n4  infini-instruct-top-500k  5.045648  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>conversations</th>\n      <th>source</th>\n      <th>score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>[{'from': 'human', 'value': 'Explain what bool...</td>\n      <td>infini-instruct-top-500k</td>\n      <td>5.212621</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>[{'from': 'human', 'value': 'Explain how recur...</td>\n      <td>infini-instruct-top-500k</td>\n      <td>5.157649</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>[{'from': 'human', 'value': 'Explain what bool...</td>\n      <td>infini-instruct-top-500k</td>\n      <td>5.147540</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>[{'from': 'human', 'value': 'Explain the conce...</td>\n      <td>infini-instruct-top-500k</td>\n      <td>5.053656</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>[{'from': 'human', 'value': 'Print the reverse...</td>\n      <td>infini-instruct-top-500k</td>\n      <td>5.045648</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"dataset[0]","metadata":{"id":"3exPEy0JdLyI","execution":{"iopub.status.busy":"2024-11-14T07:26:13.236353Z","iopub.execute_input":"2024-11-14T07:26:13.236675Z","iopub.status.idle":"2024-11-14T07:26:13.246030Z","shell.execute_reply.started":"2024-11-14T07:26:13.236640Z","shell.execute_reply":"2024-11-14T07:26:13.245090Z"},"trusted":true},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"{'conversations': [{'from': 'human',\n   'value': 'Explain what boolean operators are, what they do, and provide examples of how they can be used in programming. Additionally, describe the concept of operator precedence and provide examples of how it affects the evaluation of boolean expressions. Discuss the difference between short-circuit evaluation and normal evaluation in boolean expressions and demonstrate their usage in code. \\n\\nFurthermore, add the requirement that the code must be written in a language that does not support short-circuit evaluation natively, forcing the test taker to implement their own logic for short-circuit evaluation.\\n\\nFinally, delve into the concept of truthiness and falsiness in programming languages, explaining how it affects the evaluation of boolean expressions. Add the constraint that the test taker must write code that handles cases where truthiness and falsiness are implemented differently across different programming languages.'},\n  {'from': 'gpt',\n   'value': 'Boolean operators are logical operators used in programming to manipulate boolean values. They operate on one or more boolean operands and return a boolean result. The three main boolean operators are \"AND\" (&&), \"OR\" (||), and \"NOT\" (!).\\n\\nThe \"AND\" operator returns true if both of its operands are true, and false otherwise. For example:\\n\\n```python\\nx = 5\\ny = 10\\nresult = (x > 0) and (y < 20)  # This expression evaluates to True\\n```\\n\\nThe \"OR\" operator returns true if at least one of its operands is true, and false otherwise. For example:\\n\\n```python\\nx = 5\\ny = 10\\nresult = (x > 0) or (y < 20)  # This expression evaluates to True\\n```\\n\\nThe \"NOT\" operator negates the boolean value of its operand. It returns true if the operand is false, and false if the operand is true. For example:\\n\\n```python\\nx = 5\\nresult = not (x > 10)  # This expression evaluates to True\\n```\\n\\nOperator precedence refers to the order in which operators are evaluated in an expression. It ensures that expressions are evaluated correctly. In most programming languages, logical AND has higher precedence than logical OR. For example:\\n\\n```python\\nresult = True or False and False  # This expression is evaluated as (True or (False and False)), which is True\\n```\\n\\nShort-circuit evaluation is a behavior where the second operand of a logical operator is not evaluated if the result can be determined based on the value of the first operand. In short-circuit evaluation, if the first operand of an \"AND\" operator is false, the second operand is not evaluated because the result will always be false. Similarly, if the first operand of an \"OR\" operator is true, the second operand is not evaluated because the result will always be true.\\n\\nIn programming languages that support short-circuit evaluation natively, you can use it to improve performance or avoid errors. For example:\\n\\n```python\\nif x != 0 and (y / x) > 10:\\n    # Perform some operation\\n```\\n\\nIn languages without native short-circuit evaluation, you can implement your own logic to achieve the same behavior. Here\\'s an example in pseudocode:\\n\\n```\\nif x != 0 {\\n    if (y / x) > 10 {\\n        // Perform some operation\\n    }\\n}\\n```\\n\\nTruthiness and falsiness refer to how non-boolean values are evaluated in boolean contexts. In many programming languages, non-zero numbers and non-empty strings are considered truthy, while zero, empty strings, and null/None values are considered falsy.\\n\\nWhen evaluating boolean expressions, truthiness and falsiness come into play. For example:\\n\\n```python\\nx = 5\\nresult = x  # The value of x is truthy, so result is also truthy\\n```\\n\\nTo handle cases where truthiness and falsiness are implemented differently across programming languages, you can explicitly check the desired condition. For example:\\n\\n```python\\nx = 5\\nresult = bool(x)  # Explicitly converting x to a boolean value\\n```\\n\\nThis ensures that the result is always a boolean value, regardless of the language\\'s truthiness and falsiness rules.'}],\n 'source': 'infini-instruct-top-500k',\n 'score': 5.212620735168457}"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"features = list(dataset.features.keys())\nprint(features)","metadata":{"id":"xYKmTDtkAnt5","execution":{"iopub.status.busy":"2024-11-14T07:26:13.247166Z","iopub.execute_input":"2024-11-14T07:26:13.247477Z","iopub.status.idle":"2024-11-14T07:26:13.258809Z","shell.execute_reply.started":"2024-11-14T07:26:13.247444Z","shell.execute_reply":"2024-11-14T07:26:13.258039Z"},"trusted":true},"outputs":[{"name":"stdout","text":"['conversations', 'source', 'score']\n","output_type":"stream"}],"execution_count":21},{"cell_type":"markdown","source":"## 05 Text Formatting","metadata":{"id":"Wq59WgYJCDY0"}},{"cell_type":"code","source":"def transform_conversations(example):\n  role_map = {\n    'human' : 'user',\n    'gpt' : 'assistant'\n  }\n\n  transformed_conversations = [\n    {\n      'role' : role_map.get(turn['from'], turn['from']),\n      'content' : turn['value']\n    }\n    for turn in example['conversations']\n  ]\n  return {'conversations': transformed_conversations}","metadata":{"id":"0wXJNFBWWNYP","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T07:26:13.260057Z","iopub.execute_input":"2024-11-14T07:26:13.260617Z","iopub.status.idle":"2024-11-14T07:26:13.270309Z","shell.execute_reply.started":"2024-11-14T07:26:13.260560Z","shell.execute_reply":"2024-11-14T07:26:13.269438Z"}},"outputs":[],"execution_count":22},{"cell_type":"code","source":"formatted_dataset = dataset.map(transform_conversations, remove_columns = features)\nformatted_dataset","metadata":{"id":"7TFGpGhoWS9e","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T07:26:13.273383Z","iopub.execute_input":"2024-11-14T07:26:13.273679Z","iopub.status.idle":"2024-11-14T07:26:25.271038Z","shell.execute_reply.started":"2024-11-14T07:26:13.273647Z","shell.execute_reply":"2024-11-14T07:26:25.270144Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/100000 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b196d0755dc844b78610c667c308891c"}},"metadata":{}},{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"Dataset({\n    features: ['conversations'],\n    num_rows: 100000\n})"},"metadata":{}}],"execution_count":23},{"cell_type":"code","source":"print(formatted_dataset[0]['conversations'])","metadata":{"id":"cZya4tPEWUc9","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T07:26:25.272443Z","iopub.execute_input":"2024-11-14T07:26:25.273169Z","iopub.status.idle":"2024-11-14T07:26:25.279070Z","shell.execute_reply.started":"2024-11-14T07:26:25.273123Z","shell.execute_reply":"2024-11-14T07:26:25.277984Z"}},"outputs":[{"name":"stdout","text":"[{'content': 'Explain what boolean operators are, what they do, and provide examples of how they can be used in programming. Additionally, describe the concept of operator precedence and provide examples of how it affects the evaluation of boolean expressions. Discuss the difference between short-circuit evaluation and normal evaluation in boolean expressions and demonstrate their usage in code. \\n\\nFurthermore, add the requirement that the code must be written in a language that does not support short-circuit evaluation natively, forcing the test taker to implement their own logic for short-circuit evaluation.\\n\\nFinally, delve into the concept of truthiness and falsiness in programming languages, explaining how it affects the evaluation of boolean expressions. Add the constraint that the test taker must write code that handles cases where truthiness and falsiness are implemented differently across different programming languages.', 'role': 'user'}, {'content': 'Boolean operators are logical operators used in programming to manipulate boolean values. They operate on one or more boolean operands and return a boolean result. The three main boolean operators are \"AND\" (&&), \"OR\" (||), and \"NOT\" (!).\\n\\nThe \"AND\" operator returns true if both of its operands are true, and false otherwise. For example:\\n\\n```python\\nx = 5\\ny = 10\\nresult = (x > 0) and (y < 20)  # This expression evaluates to True\\n```\\n\\nThe \"OR\" operator returns true if at least one of its operands is true, and false otherwise. For example:\\n\\n```python\\nx = 5\\ny = 10\\nresult = (x > 0) or (y < 20)  # This expression evaluates to True\\n```\\n\\nThe \"NOT\" operator negates the boolean value of its operand. It returns true if the operand is false, and false if the operand is true. For example:\\n\\n```python\\nx = 5\\nresult = not (x > 10)  # This expression evaluates to True\\n```\\n\\nOperator precedence refers to the order in which operators are evaluated in an expression. It ensures that expressions are evaluated correctly. In most programming languages, logical AND has higher precedence than logical OR. For example:\\n\\n```python\\nresult = True or False and False  # This expression is evaluated as (True or (False and False)), which is True\\n```\\n\\nShort-circuit evaluation is a behavior where the second operand of a logical operator is not evaluated if the result can be determined based on the value of the first operand. In short-circuit evaluation, if the first operand of an \"AND\" operator is false, the second operand is not evaluated because the result will always be false. Similarly, if the first operand of an \"OR\" operator is true, the second operand is not evaluated because the result will always be true.\\n\\nIn programming languages that support short-circuit evaluation natively, you can use it to improve performance or avoid errors. For example:\\n\\n```python\\nif x != 0 and (y / x) > 10:\\n    # Perform some operation\\n```\\n\\nIn languages without native short-circuit evaluation, you can implement your own logic to achieve the same behavior. Here\\'s an example in pseudocode:\\n\\n```\\nif x != 0 {\\n    if (y / x) > 10 {\\n        // Perform some operation\\n    }\\n}\\n```\\n\\nTruthiness and falsiness refer to how non-boolean values are evaluated in boolean contexts. In many programming languages, non-zero numbers and non-empty strings are considered truthy, while zero, empty strings, and null/None values are considered falsy.\\n\\nWhen evaluating boolean expressions, truthiness and falsiness come into play. For example:\\n\\n```python\\nx = 5\\nresult = x  # The value of x is truthy, so result is also truthy\\n```\\n\\nTo handle cases where truthiness and falsiness are implemented differently across programming languages, you can explicitly check the desired condition. For example:\\n\\n```python\\nx = 5\\nresult = bool(x)  # Explicitly converting x to a boolean value\\n```\\n\\nThis ensures that the result is always a boolean value, regardless of the language\\'s truthiness and falsiness rules.', 'role': 'assistant'}]\n","output_type":"stream"}],"execution_count":24},{"cell_type":"code","source":"def format_conversation(example):\n  for entry in example['conversations']:\n    role = entry['role']\n    content = entry['content']\n\n    if role == 'user':\n      formatted_text = f\"<|start_header_id|>{role}<|end_header_id|>\\n\\n{content}\\n<|eot_id|>\"\n    elif role == 'assistant':\n      formatted_text += f\"<|start_header_id|>{role}<|end_header_id|>\\n\\n{content}\\n<|eot_id|>\"\n\n  return {'prompt': formatted_text}","metadata":{"id":"3bmXGueQWWzt","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T07:26:25.280444Z","iopub.execute_input":"2024-11-14T07:26:25.280848Z","iopub.status.idle":"2024-11-14T07:26:25.497021Z","shell.execute_reply.started":"2024-11-14T07:26:25.280802Z","shell.execute_reply":"2024-11-14T07:26:25.496018Z"}},"outputs":[],"execution_count":25},{"cell_type":"code","source":"formatted_dataset = formatted_dataset.map(\n  format_conversation,\n  remove_columns = list(formatted_dataset.features.keys())\n)\nformatted_dataset","metadata":{"id":"Z6sSaCr5eaL7","execution":{"iopub.status.busy":"2024-11-14T07:26:25.498162Z","iopub.execute_input":"2024-11-14T07:26:25.498490Z","iopub.status.idle":"2024-11-14T07:26:33.989958Z","shell.execute_reply.started":"2024-11-14T07:26:25.498458Z","shell.execute_reply":"2024-11-14T07:26:33.988933Z"},"trusted":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/100000 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"92abc25a1d3a494ea8a0a4da69619ac8"}},"metadata":{}},{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"Dataset({\n    features: ['prompt'],\n    num_rows: 100000\n})"},"metadata":{}}],"execution_count":26},{"cell_type":"code","source":"print(formatted_dataset[0]['prompt'])","metadata":{"id":"Kidf8H5zefDC","execution":{"iopub.status.busy":"2024-11-14T07:26:33.991665Z","iopub.execute_input":"2024-11-14T07:26:33.992062Z","iopub.status.idle":"2024-11-14T07:26:33.999929Z","shell.execute_reply.started":"2024-11-14T07:26:33.992017Z","shell.execute_reply":"2024-11-14T07:26:33.998955Z"},"trusted":true},"outputs":[{"name":"stdout","text":"<|start_header_id|>user<|end_header_id|>\n\nExplain what boolean operators are, what they do, and provide examples of how they can be used in programming. Additionally, describe the concept of operator precedence and provide examples of how it affects the evaluation of boolean expressions. Discuss the difference between short-circuit evaluation and normal evaluation in boolean expressions and demonstrate their usage in code. \n\nFurthermore, add the requirement that the code must be written in a language that does not support short-circuit evaluation natively, forcing the test taker to implement their own logic for short-circuit evaluation.\n\nFinally, delve into the concept of truthiness and falsiness in programming languages, explaining how it affects the evaluation of boolean expressions. Add the constraint that the test taker must write code that handles cases where truthiness and falsiness are implemented differently across different programming languages.\n<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\nBoolean operators are logical operators used in programming to manipulate boolean values. They operate on one or more boolean operands and return a boolean result. The three main boolean operators are \"AND\" (&&), \"OR\" (||), and \"NOT\" (!).\n\nThe \"AND\" operator returns true if both of its operands are true, and false otherwise. For example:\n\n```python\nx = 5\ny = 10\nresult = (x > 0) and (y < 20)  # This expression evaluates to True\n```\n\nThe \"OR\" operator returns true if at least one of its operands is true, and false otherwise. For example:\n\n```python\nx = 5\ny = 10\nresult = (x > 0) or (y < 20)  # This expression evaluates to True\n```\n\nThe \"NOT\" operator negates the boolean value of its operand. It returns true if the operand is false, and false if the operand is true. For example:\n\n```python\nx = 5\nresult = not (x > 10)  # This expression evaluates to True\n```\n\nOperator precedence refers to the order in which operators are evaluated in an expression. It ensures that expressions are evaluated correctly. In most programming languages, logical AND has higher precedence than logical OR. For example:\n\n```python\nresult = True or False and False  # This expression is evaluated as (True or (False and False)), which is True\n```\n\nShort-circuit evaluation is a behavior where the second operand of a logical operator is not evaluated if the result can be determined based on the value of the first operand. In short-circuit evaluation, if the first operand of an \"AND\" operator is false, the second operand is not evaluated because the result will always be false. Similarly, if the first operand of an \"OR\" operator is true, the second operand is not evaluated because the result will always be true.\n\nIn programming languages that support short-circuit evaluation natively, you can use it to improve performance or avoid errors. For example:\n\n```python\nif x != 0 and (y / x) > 10:\n    # Perform some operation\n```\n\nIn languages without native short-circuit evaluation, you can implement your own logic to achieve the same behavior. Here's an example in pseudocode:\n\n```\nif x != 0 {\n    if (y / x) > 10 {\n        // Perform some operation\n    }\n}\n```\n\nTruthiness and falsiness refer to how non-boolean values are evaluated in boolean contexts. In many programming languages, non-zero numbers and non-empty strings are considered truthy, while zero, empty strings, and null/None values are considered falsy.\n\nWhen evaluating boolean expressions, truthiness and falsiness come into play. For example:\n\n```python\nx = 5\nresult = x  # The value of x is truthy, so result is also truthy\n```\n\nTo handle cases where truthiness and falsiness are implemented differently across programming languages, you can explicitly check the desired condition. For example:\n\n```python\nx = 5\nresult = bool(x)  # Explicitly converting x to a boolean value\n```\n\nThis ensures that the result is always a boolean value, regardless of the language's truthiness and falsiness rules.\n<|eot_id|>\n","output_type":"stream"}],"execution_count":27},{"cell_type":"markdown","source":"## 06 Tokenization","metadata":{"id":"UMhGDyBpCHoT"}},{"cell_type":"code","source":"def tokenize_data(example, max_length = max_length):\n  return tokenizer(example['prompt'], truncation = True, padding = 'max_length', max_length = max_length)","metadata":{"id":"m7bxU8fiewb7","execution":{"iopub.status.busy":"2024-11-14T07:26:34.009451Z","iopub.execute_input":"2024-11-14T07:26:34.009759Z","iopub.status.idle":"2024-11-14T07:26:34.667066Z","shell.execute_reply.started":"2024-11-14T07:26:34.009727Z","shell.execute_reply":"2024-11-14T07:26:34.666044Z"},"trusted":true},"outputs":[],"execution_count":28},{"cell_type":"code","source":"tokenized_dataset = formatted_dataset.map(tokenize_data, batched = True)#, remove_columns = 'text')\ntokenized_dataset","metadata":{"id":"M3BO26k-BmdS","execution":{"iopub.status.busy":"2024-11-14T07:26:34.668212Z","iopub.execute_input":"2024-11-14T07:26:34.668554Z","iopub.status.idle":"2024-11-14T07:28:15.501215Z","shell.execute_reply.started":"2024-11-14T07:26:34.668520Z","shell.execute_reply":"2024-11-14T07:28:15.500334Z"},"trusted":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/100000 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8eb8f2ae73574bf2945689e2af239057"}},"metadata":{}},{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"Dataset({\n    features: ['prompt', 'input_ids', 'attention_mask'],\n    num_rows: 100000\n})"},"metadata":{}}],"execution_count":29},{"cell_type":"code","source":"print(tokenized_dataset[0]['prompt'])","metadata":{"id":"wEHhMdV4pEFH","execution":{"iopub.status.busy":"2024-11-14T07:28:15.502715Z","iopub.execute_input":"2024-11-14T07:28:15.503414Z","iopub.status.idle":"2024-11-14T07:28:15.510217Z","shell.execute_reply.started":"2024-11-14T07:28:15.503366Z","shell.execute_reply":"2024-11-14T07:28:15.509133Z"},"trusted":true},"outputs":[{"name":"stdout","text":"<|start_header_id|>user<|end_header_id|>\n\nExplain what boolean operators are, what they do, and provide examples of how they can be used in programming. Additionally, describe the concept of operator precedence and provide examples of how it affects the evaluation of boolean expressions. Discuss the difference between short-circuit evaluation and normal evaluation in boolean expressions and demonstrate their usage in code. \n\nFurthermore, add the requirement that the code must be written in a language that does not support short-circuit evaluation natively, forcing the test taker to implement their own logic for short-circuit evaluation.\n\nFinally, delve into the concept of truthiness and falsiness in programming languages, explaining how it affects the evaluation of boolean expressions. Add the constraint that the test taker must write code that handles cases where truthiness and falsiness are implemented differently across different programming languages.\n<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\nBoolean operators are logical operators used in programming to manipulate boolean values. They operate on one or more boolean operands and return a boolean result. The three main boolean operators are \"AND\" (&&), \"OR\" (||), and \"NOT\" (!).\n\nThe \"AND\" operator returns true if both of its operands are true, and false otherwise. For example:\n\n```python\nx = 5\ny = 10\nresult = (x > 0) and (y < 20)  # This expression evaluates to True\n```\n\nThe \"OR\" operator returns true if at least one of its operands is true, and false otherwise. For example:\n\n```python\nx = 5\ny = 10\nresult = (x > 0) or (y < 20)  # This expression evaluates to True\n```\n\nThe \"NOT\" operator negates the boolean value of its operand. It returns true if the operand is false, and false if the operand is true. For example:\n\n```python\nx = 5\nresult = not (x > 10)  # This expression evaluates to True\n```\n\nOperator precedence refers to the order in which operators are evaluated in an expression. It ensures that expressions are evaluated correctly. In most programming languages, logical AND has higher precedence than logical OR. For example:\n\n```python\nresult = True or False and False  # This expression is evaluated as (True or (False and False)), which is True\n```\n\nShort-circuit evaluation is a behavior where the second operand of a logical operator is not evaluated if the result can be determined based on the value of the first operand. In short-circuit evaluation, if the first operand of an \"AND\" operator is false, the second operand is not evaluated because the result will always be false. Similarly, if the first operand of an \"OR\" operator is true, the second operand is not evaluated because the result will always be true.\n\nIn programming languages that support short-circuit evaluation natively, you can use it to improve performance or avoid errors. For example:\n\n```python\nif x != 0 and (y / x) > 10:\n    # Perform some operation\n```\n\nIn languages without native short-circuit evaluation, you can implement your own logic to achieve the same behavior. Here's an example in pseudocode:\n\n```\nif x != 0 {\n    if (y / x) > 10 {\n        // Perform some operation\n    }\n}\n```\n\nTruthiness and falsiness refer to how non-boolean values are evaluated in boolean contexts. In many programming languages, non-zero numbers and non-empty strings are considered truthy, while zero, empty strings, and null/None values are considered falsy.\n\nWhen evaluating boolean expressions, truthiness and falsiness come into play. For example:\n\n```python\nx = 5\nresult = x  # The value of x is truthy, so result is also truthy\n```\n\nTo handle cases where truthiness and falsiness are implemented differently across programming languages, you can explicitly check the desired condition. For example:\n\n```python\nx = 5\nresult = bool(x)  # Explicitly converting x to a boolean value\n```\n\nThis ensures that the result is always a boolean value, regardless of the language's truthiness and falsiness rules.\n<|eot_id|>\n","output_type":"stream"}],"execution_count":30},{"cell_type":"code","source":"dataset = tokenized_dataset.train_test_split(test_size = 0.1, seed = 42)\ndataset","metadata":{"id":"C2m-e-ivDn1A","execution":{"iopub.status.busy":"2024-11-14T07:28:15.511354Z","iopub.execute_input":"2024-11-14T07:28:15.511735Z","iopub.status.idle":"2024-11-14T07:28:15.630784Z","shell.execute_reply.started":"2024-11-14T07:28:15.511701Z","shell.execute_reply":"2024-11-14T07:28:15.629863Z"},"trusted":true},"outputs":[{"execution_count":31,"output_type":"execute_result","data":{"text/plain":"DatasetDict({\n    train: Dataset({\n        features: ['prompt', 'input_ids', 'attention_mask'],\n        num_rows: 90000\n    })\n    test: Dataset({\n        features: ['prompt', 'input_ids', 'attention_mask'],\n        num_rows: 10000\n    })\n})"},"metadata":{}}],"execution_count":31},{"cell_type":"code","source":"train_dataset = dataset['train']\ntest_dataset = dataset['test']\ntrain_dataset","metadata":{"id":"QHs-BnR_zd9C","execution":{"iopub.status.busy":"2024-11-14T07:28:15.631982Z","iopub.execute_input":"2024-11-14T07:28:15.632324Z","iopub.status.idle":"2024-11-14T07:28:15.638540Z","shell.execute_reply.started":"2024-11-14T07:28:15.632290Z","shell.execute_reply":"2024-11-14T07:28:15.637664Z"},"trusted":true},"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"Dataset({\n    features: ['prompt', 'input_ids', 'attention_mask'],\n    num_rows: 90000\n})"},"metadata":{}}],"execution_count":32},{"cell_type":"code","source":"train_dataset.select(range(5)).to_pandas().head()","metadata":{"id":"-CUZuEENF2mW","execution":{"iopub.status.busy":"2024-11-14T07:28:15.639533Z","iopub.execute_input":"2024-11-14T07:28:15.639831Z","iopub.status.idle":"2024-11-14T07:28:15.675003Z","shell.execute_reply.started":"2024-11-14T07:28:15.639776Z","shell.execute_reply":"2024-11-14T07:28:15.674074Z"},"trusted":true},"outputs":[{"execution_count":33,"output_type":"execute_result","data":{"text/plain":"                                              prompt  \\\n0  <|start_header_id|>user<|end_header_id|>\\n\\nWh...   \n1  <|start_header_id|>user<|end_header_id|>\\n\\nUs...   \n2  <|start_header_id|>user<|end_header_id|>\\n\\nCr...   \n3  <|start_header_id|>user<|end_header_id|>\\n\\nWr...   \n4  <|start_header_id|>user<|end_header_id|>\\n\\nTh...   \n\n                                           input_ids  \\\n0  [27, 91, 2468, 8757, 842, 91, 29, 872, 27, 91,...   \n1  [27, 91, 2468, 8757, 842, 91, 29, 872, 27, 91,...   \n2  [27, 91, 2468, 8757, 842, 91, 29, 872, 27, 91,...   \n3  [27, 91, 2468, 8757, 842, 91, 29, 872, 27, 91,...   \n4  [27, 91, 2468, 8757, 842, 91, 29, 872, 27, 91,...   \n\n                                      attention_mask  \n0  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...  \n1  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...  \n2  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...  \n3  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...  \n4  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>prompt</th>\n      <th>input_ids</th>\n      <th>attention_mask</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>&lt;|start_header_id|&gt;user&lt;|end_header_id|&gt;\\n\\nWh...</td>\n      <td>[27, 91, 2468, 8757, 842, 91, 29, 872, 27, 91,...</td>\n      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>&lt;|start_header_id|&gt;user&lt;|end_header_id|&gt;\\n\\nUs...</td>\n      <td>[27, 91, 2468, 8757, 842, 91, 29, 872, 27, 91,...</td>\n      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>&lt;|start_header_id|&gt;user&lt;|end_header_id|&gt;\\n\\nCr...</td>\n      <td>[27, 91, 2468, 8757, 842, 91, 29, 872, 27, 91,...</td>\n      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>&lt;|start_header_id|&gt;user&lt;|end_header_id|&gt;\\n\\nWr...</td>\n      <td>[27, 91, 2468, 8757, 842, 91, 29, 872, 27, 91,...</td>\n      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>&lt;|start_header_id|&gt;user&lt;|end_header_id|&gt;\\n\\nTh...</td>\n      <td>[27, 91, 2468, 8757, 842, 91, 29, 872, 27, 91,...</td>\n      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":33},{"cell_type":"code","source":"print(train_dataset[0]['prompt'])","metadata":{"id":"6PxxrK5Rd4gk","execution":{"iopub.status.busy":"2024-11-14T07:28:15.676391Z","iopub.execute_input":"2024-11-14T07:28:15.677075Z","iopub.status.idle":"2024-11-14T07:28:15.683830Z","shell.execute_reply.started":"2024-11-14T07:28:15.677030Z","shell.execute_reply":"2024-11-14T07:28:15.682891Z"},"trusted":true},"outputs":[{"name":"stdout","text":"<|start_header_id|>user<|end_header_id|>\n\nWhat is the algorithm to detect if a linked list contains a cycle, and if a cycle is present, determine the node at which the cycle begins?\n<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\nThe algorithm to detect cycle in linked list is famously known as Floyd's Cycle-Finding Algorithm, or the Tortoise and the Hare algorithm.\n\nHere's how the algorithm works:\n\n1. Initialize two pointers, slow and fast at the head of the linked list.\n2. Move slow pointer by one and fast pointer by two. If there's a cycle in the list, the fast pointer will eventually meet the slow pointer.\n3. When they meet, reset the slow pointer to the head while leaving the fast pointer at the meeting point.\n4. Now, advance both slow and fast pointers at the same pace, one step at a time. The point at which they meet now is the start of the cycle.\n\nHere's the code in Python:\n\n```python\ndef detectCycle(head):\n    slow = fast = head\n    while fast and fast.next:\n        slow = slow.next\n        fast = fast.next.next\n        # cycle detected\n        if slow == fast:\n            break\n    else:\n        # No cycle\n        return None\n\n    # Find the starting node\n    slow = head\n    while slow != fast:\n        slow = slow.next\n        fast = fast.next\n    return slow\n```\n\nThis code returns the node at which the cycle begins. If there is no cycle, it returns None.\n\nAlso, the time complexity of this algorithm is O(n) and the space complexity is O(1), where n is the number of elements in the linked list.\n<|eot_id|>\n","output_type":"stream"}],"execution_count":34},{"cell_type":"code","source":"print(train_dataset[0]['input_ids'])","metadata":{"id":"HR79ppIiE78f","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T07:28:15.685091Z","iopub.execute_input":"2024-11-14T07:28:15.685738Z","iopub.status.idle":"2024-11-14T07:28:15.695573Z","shell.execute_reply.started":"2024-11-14T07:28:15.685696Z","shell.execute_reply":"2024-11-14T07:28:15.694514Z"}},"outputs":[{"name":"stdout","text":"[27, 91, 2468, 8757, 842, 91, 29, 872, 27, 91, 408, 8757, 842, 91, 1339, 3838, 374, 279, 12111, 311, 11140, 421, 264, 10592, 1140, 5610, 264, 10775, 11, 323, 421, 264, 10775, 374, 3042, 11, 8253, 279, 2436, 518, 892, 279, 10775, 12033, 5267, 27, 91, 68, 354, 842, 91, 1784, 91, 2468, 8757, 842, 91, 29, 77091, 27, 91, 408, 8757, 842, 91, 1339, 785, 12111, 311, 11140, 10775, 304, 10592, 1140, 374, 50187, 3881, 438, 45799, 594, 41292, 7276, 3961, 40325, 11, 476, 279, 55827, 68189, 323, 279, 472, 546, 12111, 382, 8420, 594, 1246, 279, 12111, 4278, 1447, 16, 13, 9008, 1378, 27454, 11, 6301, 323, 4937, 518, 279, 1968, 315, 279, 10592, 1140, 624, 17, 13, 14561, 6301, 7445, 553, 825, 323, 4937, 7445, 553, 1378, 13, 1416, 1052, 594, 264, 10775, 304, 279, 1140, 11, 279, 4937, 7445, 686, 9583, 3367, 279, 6301, 7445, 624, 18, 13, 3197, 807, 3367, 11, 7585, 279, 6301, 7445, 311, 279, 1968, 1393, 9380, 279, 4937, 7445, 518, 279, 6438, 1459, 624, 19, 13, 4695, 11, 11912, 2176, 6301, 323, 4937, 27454, 518, 279, 1852, 17857, 11, 825, 3019, 518, 264, 882, 13, 576, 1459, 518, 892, 807, 3367, 1431, 374, 279, 1191, 315, 279, 10775, 382, 8420, 594, 279, 2038, 304, 13027, 1447, 73594, 12669, 198, 750, 11140, 44820, 25340, 982, 262, 6301, 284, 4937, 284, 1968, 198, 262, 1393, 4937, 323, 4937, 4529, 510, 286, 6301, 284, 6301, 4529, 198, 286, 4937, 284, 4937, 4529, 4529, 198, 286, 671, 10775, 16507, 198, 286, 421, 6301, 621, 4937, 510, 310, 1438, 198, 262, 770, 510, 286, 671, 2308, 10775, 198, 286, 470, 2240, 271, 262, 671, 7379, 279, 5916, 2436, 198, 262, 6301, 284, 1968, 198, 262, 1393, 6301, 961, 4937, 510, 286, 6301, 284, 6301, 4529, 198, 286, 4937, 284, 4937, 4529, 198, 262, 470, 6301, 198, 13874, 19324, 1986, 2038, 4675, 279, 2436, 518, 892, 279, 10775, 12033, 13, 1416, 1052, 374, 902, 10775, 11, 432, 4675, 2240, 382, 13394, 11, 279, 882, 23094, 315, 419, 12111, 374, 506, 1445, 8, 323, 279, 3550, 23094, 374, 506, 7, 16, 701, 1380, 308, 374, 279, 1372, 315, 5424, 304, 279, 10592, 1140, 624, 27, 91, 68, 354, 842, 91, 29, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643]\n","output_type":"stream"}],"execution_count":35},{"cell_type":"code","source":"print(train_dataset[0]['attention_mask'])","metadata":{"id":"xGmCvvZTE82D","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T07:28:15.696965Z","iopub.execute_input":"2024-11-14T07:28:15.697372Z","iopub.status.idle":"2024-11-14T07:28:15.707076Z","shell.execute_reply.started":"2024-11-14T07:28:15.697314Z","shell.execute_reply":"2024-11-14T07:28:15.706149Z"}},"outputs":[{"name":"stdout","text":"[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n","output_type":"stream"}],"execution_count":36},{"cell_type":"markdown","source":"## 07 Data Collator Set Up","metadata":{"id":"JFX4u0vc0UkS"}},{"cell_type":"code","source":"#data_collator = DataCollatorWithPadding(tokenizer = tokenizer)\n#data_collator = DataCollatorForSeq2Seq(tokenizer = tokenizer)\ndata_collator = DataCollatorForLanguageModeling(tokenizer = tokenizer, mlm = False)","metadata":{"id":"F-mkiTYw0cZi","execution":{"iopub.status.busy":"2024-11-14T07:28:15.708225Z","iopub.execute_input":"2024-11-14T07:28:15.708854Z","iopub.status.idle":"2024-11-14T07:28:15.716418Z","shell.execute_reply.started":"2024-11-14T07:28:15.708808Z","shell.execute_reply":"2024-11-14T07:28:15.715647Z"},"trusted":true},"outputs":[],"execution_count":37},{"cell_type":"markdown","source":"## 08 Evaluation Metrics Set Up","metadata":{"id":"hP1Mu0J6CTCb"}},{"cell_type":"code","source":"def compute_metrics(p: EvalPrediction):\n  preds = np.argmax(p.predictions, axis = 1)\n  precision, recall, f1, _ = precision_recall_fscore_support(\n    p.label_ids,\n    preds,\n    average = 'weighted'\n  )\n  matrix = {\n    'accuracy': accuracy_score(p.label_ids, preds),\n    'f1': f1, 'precision': precision,\n    'recall': recall\n  }\n  return matrix","metadata":{"id":"wzNdWpCI0c7a","execution":{"iopub.status.busy":"2024-11-14T07:28:15.717526Z","iopub.execute_input":"2024-11-14T07:28:15.718228Z","iopub.status.idle":"2024-11-14T07:28:15.727257Z","shell.execute_reply.started":"2024-11-14T07:28:15.718193Z","shell.execute_reply":"2024-11-14T07:28:15.726441Z"},"trusted":true},"outputs":[],"execution_count":38},{"cell_type":"code","source":"torch.cuda.empty_cache()","metadata":{"id":"tEkgHY4fxFIJ","execution":{"iopub.status.busy":"2024-11-14T07:28:15.728338Z","iopub.execute_input":"2024-11-14T07:28:15.728647Z","iopub.status.idle":"2024-11-14T07:28:15.741480Z","shell.execute_reply.started":"2024-11-14T07:28:15.728589Z","shell.execute_reply":"2024-11-14T07:28:15.740659Z"},"trusted":true},"outputs":[],"execution_count":39},{"cell_type":"markdown","source":"## 09 Set Up PEFT / LoRA / QLoRA","metadata":{"id":"VLFCnU8-ZoUa"}},{"cell_type":"code","source":"lora_alpha = 16\nlora_dropout = 0.1\nlora_r = 64\ntarget_modules = [\"q_proj\", \"k_proj\", \"v_proj\", \"o_proj\",\n                  \"gate_proj\", \"up_proj\", \"down_proj\",]\npeft_config = LoraConfig(\n  lora_alpha = lora_alpha,\n  lora_dropout = lora_dropout,\n  r = lora_r,\n  bias = 'none',\n  task_type = 'CAUSAL_LM',\n  target_modules = target_modules,\n)","metadata":{"id":"67HK09faZqQh","execution":{"iopub.status.busy":"2024-11-14T07:28:15.742448Z","iopub.execute_input":"2024-11-14T07:28:15.742737Z","iopub.status.idle":"2024-11-14T07:28:15.752171Z","shell.execute_reply.started":"2024-11-14T07:28:15.742706Z","shell.execute_reply":"2024-11-14T07:28:15.751329Z"},"trusted":true},"outputs":[],"execution_count":40},{"cell_type":"code","source":"peft_model = get_peft_model(model, peft_config, adapter_name = 'math')\npeft_model.print_trainable_parameters()","metadata":{"id":"3ZPOifXCZuhg","execution":{"iopub.status.busy":"2024-11-14T07:28:15.753183Z","iopub.execute_input":"2024-11-14T07:28:15.753448Z","iopub.status.idle":"2024-11-14T07:28:16.833681Z","shell.execute_reply.started":"2024-11-14T07:28:15.753419Z","shell.execute_reply":"2024-11-14T07:28:16.832647Z"},"trusted":true},"outputs":[{"name":"stdout","text":"trainable params: 73,859,072 || all params: 1,617,573,376 || trainable%: 4.5660\n","output_type":"stream"}],"execution_count":41},{"cell_type":"markdown","source":"## 10 Training Model","metadata":{"id":"CVr-LToX1XCl"}},{"cell_type":"code","source":"model","metadata":{"id":"ikF6Yfkz1myd","execution":{"iopub.status.busy":"2024-11-14T07:28:16.834993Z","iopub.execute_input":"2024-11-14T07:28:16.835611Z","iopub.status.idle":"2024-11-14T07:28:16.858876Z","shell.execute_reply.started":"2024-11-14T07:28:16.835552Z","shell.execute_reply":"2024-11-14T07:28:16.857911Z"},"trusted":true},"outputs":[{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"Qwen2ForCausalLM(\n  (model): Qwen2Model(\n    (embed_tokens): Embedding(151936, 1536)\n    (layers): ModuleList(\n      (0-27): 28 x Qwen2DecoderLayer(\n        (self_attn): Qwen2SdpaAttention(\n          (q_proj): lora.Linear4bit(\n            (base_layer): Linear4bit(in_features=1536, out_features=1536, bias=True)\n            (lora_dropout): ModuleDict(\n              (math): Dropout(p=0.1, inplace=False)\n            )\n            (lora_A): ModuleDict(\n              (math): Linear(in_features=1536, out_features=64, bias=False)\n            )\n            (lora_B): ModuleDict(\n              (math): Linear(in_features=64, out_features=1536, bias=False)\n            )\n            (lora_embedding_A): ParameterDict()\n            (lora_embedding_B): ParameterDict()\n            (lora_magnitude_vector): ModuleDict()\n          )\n          (k_proj): lora.Linear4bit(\n            (base_layer): Linear4bit(in_features=1536, out_features=256, bias=True)\n            (lora_dropout): ModuleDict(\n              (math): Dropout(p=0.1, inplace=False)\n            )\n            (lora_A): ModuleDict(\n              (math): Linear(in_features=1536, out_features=64, bias=False)\n            )\n            (lora_B): ModuleDict(\n              (math): Linear(in_features=64, out_features=256, bias=False)\n            )\n            (lora_embedding_A): ParameterDict()\n            (lora_embedding_B): ParameterDict()\n            (lora_magnitude_vector): ModuleDict()\n          )\n          (v_proj): lora.Linear4bit(\n            (base_layer): Linear4bit(in_features=1536, out_features=256, bias=True)\n            (lora_dropout): ModuleDict(\n              (math): Dropout(p=0.1, inplace=False)\n            )\n            (lora_A): ModuleDict(\n              (math): Linear(in_features=1536, out_features=64, bias=False)\n            )\n            (lora_B): ModuleDict(\n              (math): Linear(in_features=64, out_features=256, bias=False)\n            )\n            (lora_embedding_A): ParameterDict()\n            (lora_embedding_B): ParameterDict()\n            (lora_magnitude_vector): ModuleDict()\n          )\n          (o_proj): lora.Linear4bit(\n            (base_layer): Linear4bit(in_features=1536, out_features=1536, bias=False)\n            (lora_dropout): ModuleDict(\n              (math): Dropout(p=0.1, inplace=False)\n            )\n            (lora_A): ModuleDict(\n              (math): Linear(in_features=1536, out_features=64, bias=False)\n            )\n            (lora_B): ModuleDict(\n              (math): Linear(in_features=64, out_features=1536, bias=False)\n            )\n            (lora_embedding_A): ParameterDict()\n            (lora_embedding_B): ParameterDict()\n            (lora_magnitude_vector): ModuleDict()\n          )\n          (rotary_emb): Qwen2RotaryEmbedding()\n        )\n        (mlp): Qwen2MLP(\n          (gate_proj): lora.Linear4bit(\n            (base_layer): Linear4bit(in_features=1536, out_features=8960, bias=False)\n            (lora_dropout): ModuleDict(\n              (math): Dropout(p=0.1, inplace=False)\n            )\n            (lora_A): ModuleDict(\n              (math): Linear(in_features=1536, out_features=64, bias=False)\n            )\n            (lora_B): ModuleDict(\n              (math): Linear(in_features=64, out_features=8960, bias=False)\n            )\n            (lora_embedding_A): ParameterDict()\n            (lora_embedding_B): ParameterDict()\n            (lora_magnitude_vector): ModuleDict()\n          )\n          (up_proj): lora.Linear4bit(\n            (base_layer): Linear4bit(in_features=1536, out_features=8960, bias=False)\n            (lora_dropout): ModuleDict(\n              (math): Dropout(p=0.1, inplace=False)\n            )\n            (lora_A): ModuleDict(\n              (math): Linear(in_features=1536, out_features=64, bias=False)\n            )\n            (lora_B): ModuleDict(\n              (math): Linear(in_features=64, out_features=8960, bias=False)\n            )\n            (lora_embedding_A): ParameterDict()\n            (lora_embedding_B): ParameterDict()\n            (lora_magnitude_vector): ModuleDict()\n          )\n          (down_proj): lora.Linear4bit(\n            (base_layer): Linear4bit(in_features=8960, out_features=1536, bias=False)\n            (lora_dropout): ModuleDict(\n              (math): Dropout(p=0.1, inplace=False)\n            )\n            (lora_A): ModuleDict(\n              (math): Linear(in_features=8960, out_features=64, bias=False)\n            )\n            (lora_B): ModuleDict(\n              (math): Linear(in_features=64, out_features=1536, bias=False)\n            )\n            (lora_embedding_A): ParameterDict()\n            (lora_embedding_B): ParameterDict()\n            (lora_magnitude_vector): ModuleDict()\n          )\n          (act_fn): SiLU()\n        )\n        (input_layernorm): Qwen2RMSNorm((1536,), eps=1e-06)\n        (post_attention_layernorm): Qwen2RMSNorm((1536,), eps=1e-06)\n      )\n    )\n    (norm): Qwen2RMSNorm((1536,), eps=1e-06)\n    (rotary_emb): Qwen2RotaryEmbedding()\n  )\n  (lm_head): Linear(in_features=1536, out_features=151936, bias=False)\n)"},"metadata":{}}],"execution_count":42},{"cell_type":"code","source":"total_params = sum(p.numel() for p in model.parameters())\ntrainable_params = sum(p.numel() for p in model.parameters() if p.requires_grad)\ntrainable_percentage = (trainable_params / total_params) * 100\n\nprint('Total parameters :', total_params)\nprint('Trainable parameters :', trainable_params)\nprint('Trainable percentage: {:.2f}%'.format(trainable_percentage))","metadata":{"id":"uhliEMyp1thd","execution":{"iopub.status.busy":"2024-11-14T07:28:16.860137Z","iopub.execute_input":"2024-11-14T07:28:16.860928Z","iopub.status.idle":"2024-11-14T07:28:16.883523Z","shell.execute_reply.started":"2024-11-14T07:28:16.860884Z","shell.execute_reply":"2024-11-14T07:28:16.882586Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Total parameters : 962475520\nTrainable parameters : 73859072\nTrainable percentage: 7.67%\n","output_type":"stream"}],"execution_count":43},{"cell_type":"code","source":"torch.cuda.empty_cache()","metadata":{"id":"Xn5zb6xWJtu-","execution":{"iopub.status.busy":"2024-11-14T07:28:16.884865Z","iopub.execute_input":"2024-11-14T07:28:16.885299Z","iopub.status.idle":"2024-11-14T07:28:16.890834Z","shell.execute_reply.started":"2024-11-14T07:28:16.885257Z","shell.execute_reply":"2024-11-14T07:28:16.889932Z"},"trusted":true},"outputs":[],"execution_count":44},{"cell_type":"code","source":"save_path = './model'\n\nbatch_size = 1\nmax_steps = 200\ntraining_args = TrainingArguments(\n  output_dir = save_path,\n  gradient_accumulation_steps = 4,\n  evaluation_strategy = 'steps',\n  do_eval = True,\n  per_device_train_batch_size = batch_size,\n  per_device_eval_batch_size = 2,\n  log_level = 'debug',\n  save_strategy = 'no',\n  save_total_limit = 2,\n  save_safetensors = False,\n  fp16 = True,\n  logging_steps = 20,\n  learning_rate = 2e-5,\n  eval_steps = 20,\n  max_steps = max_steps,\n  warmup_steps = 30,\n  lr_scheduler_type = 'cosine',\n)\ntraining_args","metadata":{"id":"93ffvb0d4cG6","execution":{"iopub.status.busy":"2024-11-14T07:28:16.892265Z","iopub.execute_input":"2024-11-14T07:28:16.892645Z","iopub.status.idle":"2024-11-14T07:28:16.930764Z","shell.execute_reply.started":"2024-11-14T07:28:16.892579Z","shell.execute_reply":"2024-11-14T07:28:16.929847Z"},"trusted":true},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/transformers/training_args.py:1568: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead\n  warnings.warn(\n","output_type":"stream"},{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"TrainingArguments(\n_n_gpu=1,\naccelerator_config={'split_batches': False, 'dispatch_batches': None, 'even_batches': True, 'use_seedable_sampler': True, 'non_blocking': False, 'gradient_accumulation_kwargs': None, 'use_configured_state': False},\nadafactor=False,\nadam_beta1=0.9,\nadam_beta2=0.999,\nadam_epsilon=1e-08,\nauto_find_batch_size=False,\naverage_tokens_across_devices=False,\nbatch_eval_metrics=False,\nbf16=False,\nbf16_full_eval=False,\ndata_seed=None,\ndataloader_drop_last=False,\ndataloader_num_workers=0,\ndataloader_persistent_workers=False,\ndataloader_pin_memory=True,\ndataloader_prefetch_factor=None,\nddp_backend=None,\nddp_broadcast_buffers=None,\nddp_bucket_cap_mb=None,\nddp_find_unused_parameters=None,\nddp_timeout=1800,\ndebug=[],\ndeepspeed=None,\ndisable_tqdm=False,\ndispatch_batches=None,\ndo_eval=True,\ndo_predict=False,\ndo_train=False,\neval_accumulation_steps=None,\neval_delay=0,\neval_do_concat_batches=True,\neval_on_start=False,\neval_steps=20,\neval_strategy=steps,\neval_use_gather_object=False,\nevaluation_strategy=steps,\nfp16=True,\nfp16_backend=auto,\nfp16_full_eval=False,\nfp16_opt_level=O1,\nfsdp=[],\nfsdp_config={'min_num_params': 0, 'xla': False, 'xla_fsdp_v2': False, 'xla_fsdp_grad_ckpt': False},\nfsdp_min_num_params=0,\nfsdp_transformer_layer_cls_to_wrap=None,\nfull_determinism=False,\ngradient_accumulation_steps=4,\ngradient_checkpointing=False,\ngradient_checkpointing_kwargs=None,\ngreater_is_better=None,\ngroup_by_length=False,\nhalf_precision_backend=auto,\nhub_always_push=False,\nhub_model_id=None,\nhub_private_repo=False,\nhub_strategy=every_save,\nhub_token=<HUB_TOKEN>,\nignore_data_skip=False,\ninclude_for_metrics=[],\ninclude_inputs_for_metrics=False,\ninclude_num_input_tokens_seen=False,\ninclude_tokens_per_second=False,\njit_mode_eval=False,\nlabel_names=None,\nlabel_smoothing_factor=0.0,\nlearning_rate=2e-05,\nlength_column_name=length,\nload_best_model_at_end=False,\nlocal_rank=0,\nlog_level=debug,\nlog_level_replica=warning,\nlog_on_each_node=True,\nlogging_dir=./model/runs/Nov14_07-28-16_c7a8cb378190,\nlogging_first_step=False,\nlogging_nan_inf_filter=True,\nlogging_steps=20,\nlogging_strategy=steps,\nlr_scheduler_kwargs={},\nlr_scheduler_type=cosine,\nmax_grad_norm=1.0,\nmax_steps=200,\nmetric_for_best_model=None,\nmp_parameters=,\nneftune_noise_alpha=None,\nno_cuda=False,\nnum_train_epochs=3.0,\noptim=adamw_torch,\noptim_args=None,\noptim_target_modules=None,\noutput_dir=./model,\noverwrite_output_dir=False,\npast_index=-1,\nper_device_eval_batch_size=2,\nper_device_train_batch_size=1,\nprediction_loss_only=False,\npush_to_hub=False,\npush_to_hub_model_id=None,\npush_to_hub_organization=None,\npush_to_hub_token=<PUSH_TO_HUB_TOKEN>,\nray_scope=last,\nremove_unused_columns=True,\nreport_to=['tensorboard', 'wandb'],\nrestore_callback_states_from_checkpoint=False,\nresume_from_checkpoint=None,\nrun_name=./model,\nsave_on_each_node=False,\nsave_only_model=False,\nsave_safetensors=False,\nsave_steps=500,\nsave_strategy=no,\nsave_total_limit=2,\nseed=42,\nskip_memory_metrics=True,\nsplit_batches=None,\ntf32=None,\ntorch_compile=False,\ntorch_compile_backend=None,\ntorch_compile_mode=None,\ntorch_empty_cache_steps=None,\ntorchdynamo=None,\ntpu_metrics_debug=False,\ntpu_num_cores=None,\nuse_cpu=False,\nuse_ipex=False,\nuse_legacy_prediction_loop=False,\nuse_liger_kernel=False,\nuse_mps_device=False,\nwarmup_ratio=0.0,\nwarmup_steps=30,\nweight_decay=0.0,\n)"},"metadata":{}}],"execution_count":45},{"cell_type":"code","source":"trainer = SFTTrainer(\n  model = model,\n  train_dataset = train_dataset,#.select(range(10000)),\n  eval_dataset = test_dataset.select(range(200)),\n  dataset_text_field = 'prompt',\n  max_seq_length = max_length,\n  tokenizer = tokenizer,\n  args = training_args,\n  peft_config = peft_config,\n)\ntrainer","metadata":{"id":"EsKeJE3SMdk7","execution":{"iopub.status.busy":"2024-11-14T07:28:16.932247Z","iopub.execute_input":"2024-11-14T07:28:16.932635Z","iopub.status.idle":"2024-11-14T07:28:18.212953Z","shell.execute_reply.started":"2024-11-14T07:28:16.932565Z","shell.execute_reply":"2024-11-14T07:28:18.211999Z"},"trusted":true},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/huggingface_hub/utils/_deprecation.py:100: FutureWarning: Deprecated argument(s) used in '__init__': dataset_text_field, max_seq_length. Will not be supported from version '0.13.0'.\n\nDeprecated positional argument(s) used in SFTTrainer, please use the SFTConfig to set these arguments instead.\n  warnings.warn(message, FutureWarning)\n/opt/conda/lib/python3.10/site-packages/transformers/training_args.py:1568: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/transformers/training_args.py:1568: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/trl/trainer/sft_trainer.py:300: UserWarning: You passed a `max_seq_length` argument to the SFTTrainer, the value you passed will override the one in the `SFTConfig`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/trl/trainer/sft_trainer.py:328: UserWarning: You passed a `dataset_text_field` argument to the SFTTrainer, the value you passed will override the one in the `SFTConfig`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/accelerate/accelerator.py:494: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.\n  self.scaler = torch.cuda.amp.GradScaler(**kwargs)\nmax_steps is given, it will override any value given in num_train_epochs\nUsing auto half precision backend\n","output_type":"stream"},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"<trl.trainer.sft_trainer.SFTTrainer at 0x7d9254187c70>"},"metadata":{}}],"execution_count":46},{"cell_type":"code","source":"trainer.train()","metadata":{"id":"MZVoQX8V1cI3","execution":{"iopub.status.busy":"2024-11-14T07:28:18.214100Z","iopub.execute_input":"2024-11-14T07:28:18.214408Z","iopub.status.idle":"2024-11-14T08:18:31.881445Z","shell.execute_reply.started":"2024-11-14T07:28:18.214375Z","shell.execute_reply":"2024-11-14T08:18:31.880648Z"},"trusted":true},"outputs":[{"name":"stderr","text":"Currently training with a batch size of: 1\nThe following columns in the training set don't have a corresponding argument in `PeftModelForCausalLM.forward` and have been ignored: prompt. If prompt are not expected by `PeftModelForCausalLM.forward`,  you can safely ignore this message.\n***** Running training *****\n  Num examples = 90,000\n  Num Epochs = 1\n  Instantaneous batch size per device = 1\n  Total train batch size (w. parallel, distributed & accumulation) = 4\n  Gradient Accumulation steps = 4\n  Total optimization steps = 200\n  Number of trainable parameters = 73,859,072\nAutomatic Weights & Biases logging enabled, to disable set os.environ[\"WANDB_DISABLED\"] = \"true\"\n\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[33mWARNING\u001b[0m The `run_name` is currently set to the same value as `TrainingArguments.output_dir`. If this was not intended, please specify a different run name by setting the `TrainingArguments.run_name` parameter.\n\u001b[34m\u001b[1mwandb\u001b[0m: Using wandb-core as the SDK backend. Please refer to https://wandb.me/wandb-core for more information.\n\u001b[34m\u001b[1mwandb\u001b[0m: Logging into wandb.ai. (Learn how to deploy a W&B server locally: https://wandb.me/wandb-server)\n\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter, or press ctrl+c to quit:","output_type":"stream"},{"output_type":"stream","name":"stdin","text":"  ········\n"},{"name":"stderr","text":"\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"VBox(children=(Label(value='Waiting for wandb.init()...\\r'), FloatProgress(value=0.01111359720000059, max=1.0)…","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"441fa3aeb5b043a594012dd50b623f24"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Tracking run with wandb version 0.18.3"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Run data is saved locally in <code>/kaggle/working/wandb/run-20241114_073143-cdeb1w3d</code>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Syncing run <strong><a href='https://wandb.ai/terlupakan100-/huggingface/runs/cdeb1w3d' target=\"_blank\">./model</a></strong> to <a href='https://wandb.ai/terlupakan100-/huggingface' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":" View project at <a href='https://wandb.ai/terlupakan100-/huggingface' target=\"_blank\">https://wandb.ai/terlupakan100-/huggingface</a>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":" View run at <a href='https://wandb.ai/terlupakan100-/huggingface/runs/cdeb1w3d' target=\"_blank\">https://wandb.ai/terlupakan100-/huggingface/runs/cdeb1w3d</a>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n    <div>\n      \n      <progress value='200' max='200' style='width:300px; height:20px; vertical-align: middle;'></progress>\n      [200/200 46:36, Epoch 0/1]\n    </div>\n    <table border=\"1\" class=\"dataframe\">\n  <thead>\n <tr style=\"text-align: left;\">\n      <th>Step</th>\n      <th>Training Loss</th>\n      <th>Validation Loss</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>20</td>\n      <td>1.122200</td>\n      <td>1.093433</td>\n    </tr>\n    <tr>\n      <td>40</td>\n      <td>1.020900</td>\n      <td>0.995093</td>\n    </tr>\n    <tr>\n      <td>60</td>\n      <td>0.920200</td>\n      <td>0.880917</td>\n    </tr>\n    <tr>\n      <td>80</td>\n      <td>0.836300</td>\n      <td>0.846716</td>\n    </tr>\n    <tr>\n      <td>100</td>\n      <td>0.856500</td>\n      <td>0.833136</td>\n    </tr>\n    <tr>\n      <td>120</td>\n      <td>0.831800</td>\n      <td>0.828368</td>\n    </tr>\n    <tr>\n      <td>140</td>\n      <td>0.824300</td>\n      <td>0.826173</td>\n    </tr>\n    <tr>\n      <td>160</td>\n      <td>0.843400</td>\n      <td>0.825066</td>\n    </tr>\n    <tr>\n      <td>180</td>\n      <td>0.772000</td>\n      <td>0.824651</td>\n    </tr>\n    <tr>\n      <td>200</td>\n      <td>0.795300</td>\n      <td>0.824592</td>\n    </tr>\n  </tbody>\n</table><p>"},"metadata":{}},{"name":"stderr","text":"The following columns in the evaluation set don't have a corresponding argument in `PeftModelForCausalLM.forward` and have been ignored: prompt. If prompt are not expected by `PeftModelForCausalLM.forward`,  you can safely ignore this message.\n\n***** Running Evaluation *****\n  Num examples = 200\n  Batch size = 2\nThe following columns in the evaluation set don't have a corresponding argument in `PeftModelForCausalLM.forward` and have been ignored: prompt. If prompt are not expected by `PeftModelForCausalLM.forward`,  you can safely ignore this message.\n\n***** Running Evaluation *****\n  Num examples = 200\n  Batch size = 2\nThe following columns in the evaluation set don't have a corresponding argument in `PeftModelForCausalLM.forward` and have been ignored: prompt. If prompt are not expected by `PeftModelForCausalLM.forward`,  you can safely ignore this message.\n\n***** Running Evaluation *****\n  Num examples = 200\n  Batch size = 2\nThe following columns in the evaluation set don't have a corresponding argument in `PeftModelForCausalLM.forward` and have been ignored: prompt. If prompt are not expected by `PeftModelForCausalLM.forward`,  you can safely ignore this message.\n\n***** Running Evaluation *****\n  Num examples = 200\n  Batch size = 2\nThe following columns in the evaluation set don't have a corresponding argument in `PeftModelForCausalLM.forward` and have been ignored: prompt. If prompt are not expected by `PeftModelForCausalLM.forward`,  you can safely ignore this message.\n\n***** Running Evaluation *****\n  Num examples = 200\n  Batch size = 2\nThe following columns in the evaluation set don't have a corresponding argument in `PeftModelForCausalLM.forward` and have been ignored: prompt. If prompt are not expected by `PeftModelForCausalLM.forward`,  you can safely ignore this message.\n\n***** Running Evaluation *****\n  Num examples = 200\n  Batch size = 2\nThe following columns in the evaluation set don't have a corresponding argument in `PeftModelForCausalLM.forward` and have been ignored: prompt. If prompt are not expected by `PeftModelForCausalLM.forward`,  you can safely ignore this message.\n\n***** Running Evaluation *****\n  Num examples = 200\n  Batch size = 2\nThe following columns in the evaluation set don't have a corresponding argument in `PeftModelForCausalLM.forward` and have been ignored: prompt. If prompt are not expected by `PeftModelForCausalLM.forward`,  you can safely ignore this message.\n\n***** Running Evaluation *****\n  Num examples = 200\n  Batch size = 2\nThe following columns in the evaluation set don't have a corresponding argument in `PeftModelForCausalLM.forward` and have been ignored: prompt. If prompt are not expected by `PeftModelForCausalLM.forward`,  you can safely ignore this message.\n\n***** Running Evaluation *****\n  Num examples = 200\n  Batch size = 2\nThe following columns in the evaluation set don't have a corresponding argument in `PeftModelForCausalLM.forward` and have been ignored: prompt. If prompt are not expected by `PeftModelForCausalLM.forward`,  you can safely ignore this message.\n\n***** Running Evaluation *****\n  Num examples = 200\n  Batch size = 2\n\n\nTraining completed. Do not forget to share your model on huggingface.co/models =)\n\n\n","output_type":"stream"},{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"TrainOutput(global_step=200, training_loss=0.8823093509674073, metrics={'train_runtime': 3013.1703, 'train_samples_per_second': 0.266, 'train_steps_per_second': 0.066, 'total_flos': 7166650377830400.0, 'train_loss': 0.8823093509674073, 'epoch': 0.008888888888888889})"},"metadata":{}}],"execution_count":47},{"cell_type":"markdown","source":"## 11 Model Evaluation","metadata":{"id":"v5N6fZsU1xiG"}},{"cell_type":"code","source":"evaluation_results = trainer.evaluate()\nprint('Evaluation Results:', evaluation_results)","metadata":{"id":"5d6DT3o0113O","execution":{"iopub.status.busy":"2024-11-14T08:18:31.882623Z","iopub.execute_input":"2024-11-14T08:18:31.882907Z","iopub.status.idle":"2024-11-14T08:20:38.204068Z","shell.execute_reply.started":"2024-11-14T08:18:31.882876Z","shell.execute_reply":"2024-11-14T08:20:38.202936Z"},"trusted":true},"outputs":[{"name":"stderr","text":"The following columns in the evaluation set don't have a corresponding argument in `PeftModelForCausalLM.forward` and have been ignored: prompt. If prompt are not expected by `PeftModelForCausalLM.forward`,  you can safely ignore this message.\n\n***** Running Evaluation *****\n  Num examples = 200\n  Batch size = 2\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n    <div>\n      \n      <progress value='100' max='100' style='width:300px; height:20px; vertical-align: middle;'></progress>\n      [100/100 02:05]\n    </div>\n    "},"metadata":{}},{"name":"stdout","text":"Evaluation Results: {'eval_loss': 0.8245924115180969, 'eval_runtime': 126.3068, 'eval_samples_per_second': 1.583, 'eval_steps_per_second': 0.792, 'epoch': 0.008888888888888889}\n","output_type":"stream"}],"execution_count":48},{"cell_type":"markdown","source":"## 12 Save Model","metadata":{"id":"PjTPWhCj4JQj"}},{"cell_type":"code","source":"save_model = trainer.model.module if hasattr(trainer.model, 'module') else trainer.model\nsave_model.save_pretrained(save_path)","metadata":{"id":"OKAmko8h2VeV","execution":{"iopub.status.busy":"2024-11-14T08:20:38.205660Z","iopub.execute_input":"2024-11-14T08:20:38.206059Z","iopub.status.idle":"2024-11-14T08:20:39.955084Z","shell.execute_reply.started":"2024-11-14T08:20:38.206022Z","shell.execute_reply":"2024-11-14T08:20:39.954125Z"},"trusted":true},"outputs":[{"name":"stderr","text":"loading configuration file config.json from cache at /root/.cache/huggingface/hub/models--Qwen--Qwen2.5-1.5B/snapshots/8faed761d45a263340a0528343f099c05c9a4323/config.json\nModel config Qwen2Config {\n  \"architectures\": [\n    \"Qwen2ForCausalLM\"\n  ],\n  \"attention_dropout\": 0.0,\n  \"bos_token_id\": 151643,\n  \"eos_token_id\": 151643,\n  \"hidden_act\": \"silu\",\n  \"hidden_size\": 1536,\n  \"initializer_range\": 0.02,\n  \"intermediate_size\": 8960,\n  \"max_position_embeddings\": 131072,\n  \"max_window_layers\": 28,\n  \"model_type\": \"qwen2\",\n  \"num_attention_heads\": 12,\n  \"num_hidden_layers\": 28,\n  \"num_key_value_heads\": 2,\n  \"rms_norm_eps\": 1e-06,\n  \"rope_scaling\": null,\n  \"rope_theta\": 1000000.0,\n  \"sliding_window\": null,\n  \"tie_word_embeddings\": true,\n  \"torch_dtype\": \"bfloat16\",\n  \"transformers_version\": \"4.46.2\",\n  \"use_cache\": true,\n  \"use_mrope\": false,\n  \"use_sliding_window\": false,\n  \"vocab_size\": 151936\n}\n\nloading configuration file config.json from cache at /root/.cache/huggingface/hub/models--Qwen--Qwen2.5-1.5B/snapshots/8faed761d45a263340a0528343f099c05c9a4323/config.json\nModel config Qwen2Config {\n  \"architectures\": [\n    \"Qwen2ForCausalLM\"\n  ],\n  \"attention_dropout\": 0.0,\n  \"bos_token_id\": 151643,\n  \"eos_token_id\": 151643,\n  \"hidden_act\": \"silu\",\n  \"hidden_size\": 1536,\n  \"initializer_range\": 0.02,\n  \"intermediate_size\": 8960,\n  \"max_position_embeddings\": 131072,\n  \"max_window_layers\": 28,\n  \"model_type\": \"qwen2\",\n  \"num_attention_heads\": 12,\n  \"num_hidden_layers\": 28,\n  \"num_key_value_heads\": 2,\n  \"rms_norm_eps\": 1e-06,\n  \"rope_scaling\": null,\n  \"rope_theta\": 1000000.0,\n  \"sliding_window\": null,\n  \"tie_word_embeddings\": true,\n  \"torch_dtype\": \"bfloat16\",\n  \"transformers_version\": \"4.46.2\",\n  \"use_cache\": true,\n  \"use_mrope\": false,\n  \"use_sliding_window\": false,\n  \"vocab_size\": 151936\n}\n\n","output_type":"stream"}],"execution_count":49},{"cell_type":"markdown","source":"## 13 Load PEFT Model","metadata":{"id":"3NhWAM5h9Rn5"}},{"cell_type":"code","source":"torch.cuda.empty_cache()","metadata":{"id":"dlTaH2HoC26T","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T08:20:39.956374Z","iopub.execute_input":"2024-11-14T08:20:39.956932Z","iopub.status.idle":"2024-11-14T08:20:40.389744Z","shell.execute_reply.started":"2024-11-14T08:20:39.956885Z","shell.execute_reply":"2024-11-14T08:20:40.388771Z"}},"outputs":[],"execution_count":50},{"cell_type":"code","source":"peft_model = PeftModel.from_pretrained(model, save_path)\npeft_model","metadata":{"id":"Nz2HT8nb9XJa","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T08:20:40.391257Z","iopub.execute_input":"2024-11-14T08:20:40.391996Z","iopub.status.idle":"2024-11-14T08:20:41.635575Z","shell.execute_reply.started":"2024-11-14T08:20:40.391950Z","shell.execute_reply":"2024-11-14T08:20:41.634647Z"}},"outputs":[{"execution_count":51,"output_type":"execute_result","data":{"text/plain":"PeftModelForCausalLM(\n  (base_model): LoraModel(\n    (model): Qwen2ForCausalLM(\n      (model): Qwen2Model(\n        (embed_tokens): Embedding(151936, 1536)\n        (layers): ModuleList(\n          (0-27): 28 x Qwen2DecoderLayer(\n            (self_attn): Qwen2SdpaAttention(\n              (q_proj): lora.Linear4bit(\n                (base_layer): Linear4bit(in_features=1536, out_features=1536, bias=True)\n                (lora_dropout): ModuleDict(\n                  (math): Dropout(p=0.1, inplace=False)\n                  (default): Dropout(p=0.1, inplace=False)\n                )\n                (lora_A): ModuleDict(\n                  (math): Linear(in_features=1536, out_features=64, bias=False)\n                  (default): Linear(in_features=1536, out_features=64, bias=False)\n                )\n                (lora_B): ModuleDict(\n                  (math): Linear(in_features=64, out_features=1536, bias=False)\n                  (default): Linear(in_features=64, out_features=1536, bias=False)\n                )\n                (lora_embedding_A): ParameterDict()\n                (lora_embedding_B): ParameterDict()\n                (lora_magnitude_vector): ModuleDict()\n              )\n              (k_proj): lora.Linear4bit(\n                (base_layer): Linear4bit(in_features=1536, out_features=256, bias=True)\n                (lora_dropout): ModuleDict(\n                  (math): Dropout(p=0.1, inplace=False)\n                  (default): Dropout(p=0.1, inplace=False)\n                )\n                (lora_A): ModuleDict(\n                  (math): Linear(in_features=1536, out_features=64, bias=False)\n                  (default): Linear(in_features=1536, out_features=64, bias=False)\n                )\n                (lora_B): ModuleDict(\n                  (math): Linear(in_features=64, out_features=256, bias=False)\n                  (default): Linear(in_features=64, out_features=256, bias=False)\n                )\n                (lora_embedding_A): ParameterDict()\n                (lora_embedding_B): ParameterDict()\n                (lora_magnitude_vector): ModuleDict()\n              )\n              (v_proj): lora.Linear4bit(\n                (base_layer): Linear4bit(in_features=1536, out_features=256, bias=True)\n                (lora_dropout): ModuleDict(\n                  (math): Dropout(p=0.1, inplace=False)\n                  (default): Dropout(p=0.1, inplace=False)\n                )\n                (lora_A): ModuleDict(\n                  (math): Linear(in_features=1536, out_features=64, bias=False)\n                  (default): Linear(in_features=1536, out_features=64, bias=False)\n                )\n                (lora_B): ModuleDict(\n                  (math): Linear(in_features=64, out_features=256, bias=False)\n                  (default): Linear(in_features=64, out_features=256, bias=False)\n                )\n                (lora_embedding_A): ParameterDict()\n                (lora_embedding_B): ParameterDict()\n                (lora_magnitude_vector): ModuleDict()\n              )\n              (o_proj): lora.Linear4bit(\n                (base_layer): Linear4bit(in_features=1536, out_features=1536, bias=False)\n                (lora_dropout): ModuleDict(\n                  (math): Dropout(p=0.1, inplace=False)\n                  (default): Dropout(p=0.1, inplace=False)\n                )\n                (lora_A): ModuleDict(\n                  (math): Linear(in_features=1536, out_features=64, bias=False)\n                  (default): Linear(in_features=1536, out_features=64, bias=False)\n                )\n                (lora_B): ModuleDict(\n                  (math): Linear(in_features=64, out_features=1536, bias=False)\n                  (default): Linear(in_features=64, out_features=1536, bias=False)\n                )\n                (lora_embedding_A): ParameterDict()\n                (lora_embedding_B): ParameterDict()\n                (lora_magnitude_vector): ModuleDict()\n              )\n              (rotary_emb): Qwen2RotaryEmbedding()\n            )\n            (mlp): Qwen2MLP(\n              (gate_proj): lora.Linear4bit(\n                (base_layer): Linear4bit(in_features=1536, out_features=8960, bias=False)\n                (lora_dropout): ModuleDict(\n                  (math): Dropout(p=0.1, inplace=False)\n                  (default): Dropout(p=0.1, inplace=False)\n                )\n                (lora_A): ModuleDict(\n                  (math): Linear(in_features=1536, out_features=64, bias=False)\n                  (default): Linear(in_features=1536, out_features=64, bias=False)\n                )\n                (lora_B): ModuleDict(\n                  (math): Linear(in_features=64, out_features=8960, bias=False)\n                  (default): Linear(in_features=64, out_features=8960, bias=False)\n                )\n                (lora_embedding_A): ParameterDict()\n                (lora_embedding_B): ParameterDict()\n                (lora_magnitude_vector): ModuleDict()\n              )\n              (up_proj): lora.Linear4bit(\n                (base_layer): Linear4bit(in_features=1536, out_features=8960, bias=False)\n                (lora_dropout): ModuleDict(\n                  (math): Dropout(p=0.1, inplace=False)\n                  (default): Dropout(p=0.1, inplace=False)\n                )\n                (lora_A): ModuleDict(\n                  (math): Linear(in_features=1536, out_features=64, bias=False)\n                  (default): Linear(in_features=1536, out_features=64, bias=False)\n                )\n                (lora_B): ModuleDict(\n                  (math): Linear(in_features=64, out_features=8960, bias=False)\n                  (default): Linear(in_features=64, out_features=8960, bias=False)\n                )\n                (lora_embedding_A): ParameterDict()\n                (lora_embedding_B): ParameterDict()\n                (lora_magnitude_vector): ModuleDict()\n              )\n              (down_proj): lora.Linear4bit(\n                (base_layer): Linear4bit(in_features=8960, out_features=1536, bias=False)\n                (lora_dropout): ModuleDict(\n                  (math): Dropout(p=0.1, inplace=False)\n                  (default): Dropout(p=0.1, inplace=False)\n                )\n                (lora_A): ModuleDict(\n                  (math): Linear(in_features=8960, out_features=64, bias=False)\n                  (default): Linear(in_features=8960, out_features=64, bias=False)\n                )\n                (lora_B): ModuleDict(\n                  (math): Linear(in_features=64, out_features=1536, bias=False)\n                  (default): Linear(in_features=64, out_features=1536, bias=False)\n                )\n                (lora_embedding_A): ParameterDict()\n                (lora_embedding_B): ParameterDict()\n                (lora_magnitude_vector): ModuleDict()\n              )\n              (act_fn): SiLU()\n            )\n            (input_layernorm): Qwen2RMSNorm((1536,), eps=1e-06)\n            (post_attention_layernorm): Qwen2RMSNorm((1536,), eps=1e-06)\n          )\n        )\n        (norm): Qwen2RMSNorm((1536,), eps=1e-06)\n        (rotary_emb): Qwen2RotaryEmbedding()\n      )\n      (lm_head): Linear(in_features=1536, out_features=151936, bias=False)\n    )\n  )\n)"},"metadata":{}}],"execution_count":51},{"cell_type":"code","source":"total_params = sum(p.numel() for p in model.parameters())\ntrainable_params = sum(p.numel() for p in model.parameters() if p.requires_grad)\ntrainable_percentage = (trainable_params / total_params) * 100\n\nprint('Total parameters :', total_params)\nprint('Trainable parameters :', trainable_params)\nprint('Trainable percentage: {:.2f}%'.format(trainable_percentage))","metadata":{"id":"eepaD3O-9t3H","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T08:20:41.636887Z","iopub.execute_input":"2024-11-14T08:20:41.637184Z","iopub.status.idle":"2024-11-14T08:20:41.664445Z","shell.execute_reply.started":"2024-11-14T08:20:41.637152Z","shell.execute_reply":"2024-11-14T08:20:41.663534Z"}},"outputs":[{"name":"stdout","text":"Total parameters : 1036334592\nTrainable parameters : 0\nTrainable percentage: 0.00%\n","output_type":"stream"}],"execution_count":52},{"cell_type":"markdown","source":"## 14 Post Test","metadata":{"id":"GrXYkyb89UJQ"}},{"cell_type":"code","source":"def assistant(prompt):\n  messages = [\n    {'role' : 'human', 'content' : prompt},\n  ]\n  inputs = tokenizer.apply_chat_template(\n    messages,\n    tokenize = True,\n    add_generation_prompt = True,\n    return_tensors = 'pt',\n  ).to('cuda')\n  generation_config = GenerationConfig(\n    do_sample = True,\n    top_k = 1,\n    temperature = 0.1,\n    max_new_tokens = 1024,\n    pad_token_id = tokenizer.eos_token_id\n  )\n  outputs = peft_model.generate(\n    input_ids = inputs,\n    generation_config = generation_config\n  )\n  return print(tokenizer.decode(outputs[0]))#, skip_special_tokens = True))","metadata":{"id":"lgVU8Ci9RMu6","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T08:20:41.665703Z","iopub.execute_input":"2024-11-14T08:20:41.666115Z","iopub.status.idle":"2024-11-14T08:20:41.674364Z","shell.execute_reply.started":"2024-11-14T08:20:41.666069Z","shell.execute_reply":"2024-11-14T08:20:41.673644Z"}},"outputs":[],"execution_count":53},{"cell_type":"code","source":"prompt = '''\nSummarize the following legal text in a few sentences:\n'In the case of John Doe v. XYZ Corp, the plaintiff, John Doe, entered into a formal service contract with XYZ Corp in January 2022. The agreement stipulated a one-year commitment for IT support services, with John Doe providing on-site troubleshooting, software updates, and system maintenance. XYZ Corp agreed to pay a fixed monthly retainer along with additional fees for after-hours support. However, in June 2022, XYZ Corp terminated the contract without prior notice, claiming that an unexpected downturn in business operations left them financially unable to continue. The plaintiff alleges wrongful termination, asserting that XYZ Corp failed to adhere to the 60-day notice clause outlined in the contract. Additionally, the plaintiff contends that the early termination damaged his professional reputation and resulted in significant financial losses, including missed client opportunities and incurred expenses for certifications specific to XYZ Corp’s systems. John Doe is seeking compensation for the remaining contract balance, damages for reputational harm, and reimbursement for training and certification costs required under the agreement.\n'''\nassistant(prompt)","metadata":{"id":"JlEhdEGGTN6T","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T08:20:41.675520Z","iopub.execute_input":"2024-11-14T08:20:41.675963Z","iopub.status.idle":"2024-11-14T08:22:44.758665Z","shell.execute_reply.started":"2024-11-14T08:20:41.675923Z","shell.execute_reply":"2024-11-14T08:22:44.757676Z"}},"outputs":[{"name":"stdout","text":"<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>assistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou\n","output_type":"stream"}],"execution_count":54},{"cell_type":"code","source":"prompt = \"What are the legal implications if a party violates a confidentiality agreement in the context of contract law? For example, consider a scenario where a contractor working with Tech Innovators Inc. shares proprietary technology information with a competitor. Explain in detail and cite relevant case law where possible.\"\nassistant(prompt)","metadata":{"id":"BxmnFTADTQsT","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T08:22:44.760164Z","iopub.execute_input":"2024-11-14T08:22:44.761012Z","iopub.status.idle":"2024-11-14T08:24:47.430183Z","shell.execute_reply.started":"2024-11-14T08:22:44.760960Z","shell.execute_reply":"2024-11-14T08:24:47.429228Z"}},"outputs":[{"name":"stdout","text":"<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>assistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou\n","output_type":"stream"}],"execution_count":55},{"cell_type":"code","source":"prompt = \"Rephrase the following legal statement to make it more understandable for a general audience: 'Under the terms of the non-compete agreement, the defendant is barred from engaging in any business that competes with the plaintiff's business within a 50-mile radius for two years following the termination of employment.' Retain all key information while simplifying the language.\"\nassistant(prompt)","metadata":{"id":"RDONbvZKTTqs","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T08:24:47.431332Z","iopub.execute_input":"2024-11-14T08:24:47.431673Z","iopub.status.idle":"2024-11-14T08:26:49.103257Z","shell.execute_reply.started":"2024-11-14T08:24:47.431631Z","shell.execute_reply":"2024-11-14T08:26:49.102420Z"}},"outputs":[{"name":"stdout","text":"<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>assistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou\n","output_type":"stream"}],"execution_count":56},{"cell_type":"code","source":"prompt = \"In the case where a defendant claims breach of contract due to unforeseeable events, how does the principle of 'force majeure' apply? For instance, if a company was unable to deliver contracted goods due to a natural disaster, provide a detailed explanation and outline any relevant conditions under which the force majeure principle might or might not be applicable.\"\nassistant(prompt)","metadata":{"id":"p7dBkB_7TjZY","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T08:26:49.104409Z","iopub.execute_input":"2024-11-14T08:26:49.104742Z","iopub.status.idle":"2024-11-14T08:28:49.452439Z","shell.execute_reply.started":"2024-11-14T08:26:49.104708Z","shell.execute_reply":"2024-11-14T08:28:49.451477Z"}},"outputs":[{"name":"stdout","text":"<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>assistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou\n","output_type":"stream"}],"execution_count":57},{"cell_type":"code","source":"prompt = \"Construct an argument in defense of a client accused of breaching intellectual property laws due to sharing copyrighted material in an educational setting. For example, a teacher shares portions of a textbook with students to support classroom discussion. Focus on any legal exceptions or defenses that may apply, such as the fair use doctrine in educational contexts.\"\nassistant(prompt)","metadata":{"id":"BUPoJAmnTnCq","trusted":true,"execution":{"iopub.status.busy":"2024-11-14T08:28:49.453636Z","iopub.execute_input":"2024-11-14T08:28:49.453920Z","iopub.status.idle":"2024-11-14T08:30:50.422177Z","shell.execute_reply.started":"2024-11-14T08:28:49.453889Z","shell.execute_reply":"2024-11-14T08:30:50.421239Z"}},"outputs":[{"name":"stdout","text":"<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>assistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou are a helpful assistant.ospace\nospaceassistant\nYou\n","output_type":"stream"}],"execution_count":58}]}